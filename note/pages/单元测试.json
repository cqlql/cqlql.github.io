{"article":"<section><h1 id=\"20170828 环境搭建总结，测试开始：带dom测试\" data-index=0>20170828 环境搭建总结，测试开始：带dom测试</h1><section><h2 id=需要安装的包 data-index=1>需要安装的包</h2><p>webpack</p><p>babel-core babel-loader babel-plugin-external-helpers babel-plugin-transform-runtime babel-preset-env</p><p>相关测试包：<br>chai karma karma-chai karma-chai-dom karma-phantomjs-launcher karma-chrome-launcher karma-mocha karma-sourcemap-loader karma-webpack mocha</p></section><section><h2 id=\"增加 dom 测试：karma-chai-dom 包\" data-index=2>增加 dom 测试：karma-chai-dom 包</h2><p>karma-chai-dom 包下载后即支持：<a href=http://chaijs.com/plugins/chai-dom/ >语法文档</a></p><p>而且直接支持浏览器的 dom 操作</p></section><section><h2 id=\"给 webpack 增加 sourcemap：karma-sourcemap-loader 包\" data-index=3>给 webpack 增加 sourcemap：karma-sourcemap-loader 包</h2><p><a href=https://www.npmjs.com/package/karma-webpack>karma-webpack 文档</a> 中有说明</p><p>karma.conf.js 中需要的配置，2个地方：preprocessors、webpack.devtool</p><pre><code class=lang-js><span class=hljs-built_in>module</span>.exports = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>config</span>) </span>{\n  config.set({\n    <span class=hljs-attr>preprocessors</span>: {\n      <span class=hljs-string>'./test/*.js'</span>:[<span class=hljs-string>'webpack'</span>, <span class=hljs-string>'sourcemap'</span>]\n    },\n    <span class=hljs-attr>webpack</span>:{\n      <span class=hljs-attr>devtool</span>: <span class=hljs-string>'inline-source-map'</span>\n    }\n  })\n}\n</code></pre></section><section><h2 id=\"karma.conf.js 配置参考，可直接用\" data-index=4>karma.conf.js 配置参考，可直接用</h2><pre><code class=lang-js><span class=hljs-keyword>let</span> path = <span class=hljs-built_in>require</span>(<span class=hljs-string>'path'</span>)\n\n<span class=hljs-built_in>module</span>.exports = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>config</span>) </span>{\n  config.set({\n    <span class=hljs-attr>frameworks</span>: [<span class=hljs-string>'mocha'</span>,<span class=hljs-string>'chai-dom'</span>,<span class=hljs-string>'chai'</span>],\n    <span class=hljs-attr>files</span>: [\n      <span class=hljs-string>'./test/*.js'</span>\n    ],\n    <span class=hljs-attr>preprocessors</span>: {\n      <span class=hljs-string>'./test/*.js'</span>:[<span class=hljs-string>'webpack'</span>, <span class=hljs-string>'sourcemap'</span>]\n    },\n    <span class=hljs-attr>webpack</span>:{\n      <span class=hljs-attr>module</span>: {\n        <span class=hljs-comment>//加载器配置</span>\n        rules: [\n          {\n            <span class=hljs-attr>test</span>: <span class=hljs-regexp>/\\.js$/</span>,\n            <span class=hljs-attr>include</span>:[\n              path.resolve(__dirname, <span class=hljs-string>'src'</span>),\n              path.resolve(__dirname,<span class=hljs-string>'test'</span>)\n            ],\n            <span class=hljs-comment>// exclude: /node_modules/,</span>\n            loader: <span class=hljs-string>'babel-loader'</span>,\n            <span class=hljs-attr>options</span>: {\n                <span class=hljs-string>\"presets\"</span>: [\n                    <span class=hljs-string>\"env\"</span>\n                ],\n                <span class=hljs-string>\"plugins\"</span>: [\n                    <span class=hljs-string>\"transform-runtime\"</span>\n                ]\n            }\n          }\n        ]\n      },\n      <span class=hljs-attr>devtool</span>: <span class=hljs-string>'inline-source-map'</span>\n    },\n    <span class=hljs-attr>webpackMiddleware</span>: {\n      <span class=hljs-attr>noInfo</span>: <span class=hljs-literal>true</span>\n    },\n    <span class=hljs-attr>browsers</span>: [<span class=hljs-string>'Chrome'</span><span class=hljs-comment>/*, 'PhantomJS'*/</span>],\n  })\n}\n</code></pre></section><section><h2 id=\"测试用例语法：mocha + chai\" data-index=5>测试用例语法：mocha + chai</h2><section><h3 id=\"dom 测试, 完全的浏览器 dom api\" data-index=6>dom 测试, 完全的浏览器 dom api</h3><p>当然，也有断言语法</p><pre><code class=lang-js>\ndescribe(<span class=hljs-string>'fullPreloader 功能测试'</span>, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n\n  it(<span class=hljs-string>'第一次调用 close，是否报错'</span>, <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n\n    fullPreloader.close()\n\n  })\n  <span class=hljs-comment>//</span>\n  it(<span class=hljs-string>'执行 show，是否增加 show'</span>, <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n\n    fullPreloader.show()\n\n    <span class=hljs-keyword>let</span> elem = <span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'.preloader-full'</span>)\n\n    elem.should.have.class(<span class=hljs-string>'show'</span>)\n\n\n  })\n})\n</code></pre></section><section><h3 id=异步测试 data-index=7>异步测试</h3><p>需在回调中执行 done，通知测试结束</p><pre><code class=lang-js>describe(<span class=hljs-string>'天气信息获取'</span>, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n\n  it(<span class=hljs-string>'天气信息获取'</span>, <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>done</span>) </span>{\n    weatherInfoLoad(<span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>d</span>) </span>{\n      <span class=hljs-built_in>console</span>.log(d)\n      done()\n    })\n  })\n})\n</code></pre></section></section><section><h2 id=\"更详细的测试后报告 karma-spec-reporter\" data-index=8>更详细的测试后报告 <a href=https://www.npmjs.com/package/karma-spec-reporter>karma-spec-reporter</a></h2><p>先安装插件：karma-spec-reporter</p><p>再配置：karma.conf.js</p><pre><code class=lang-js><span class=hljs-built_in>module</span>.exports = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>config</span>) </span>{\n  config.set({\n      <span class=hljs-attr>reporters</span>: [<span class=hljs-string>\"spec\"</span>]\n      plugins: [<span class=hljs-string>\"karma-spec-reporter\"</span>],\n\n  })\n}\n</code></pre></section><section><h2 id=开始测试 data-index=9>开始测试</h2><section><h3 id=cli data-index=10>cli</h3><p>package.json</p><pre><code class=lang-json>{\n  <span class=hljs-string>\"scripts\"</span>: {\n    <span class=hljs-string>\"test\"</span>: <span class=hljs-string>\"karma start\"</span>\n  }\n}\n</code></pre><pre><code>npm run test\n</code></pre></section><section><h3 id=\"Node.js API\" data-index=11><a href=https://karma-runner.github.io/1.0/dev/public-api.html>Node.js API</a></h3><pre><code><span class=hljs-keyword>const</span> karma = <span class=hljs-built_in>require</span>(<span class=hljs-string>'karma'</span>)\n<span class=hljs-keyword>const</span> cfg = karma.config;\n<span class=hljs-keyword>const</span> path = <span class=hljs-built_in>require</span>(<span class=hljs-string>'path'</span>);\n<span class=hljs-keyword>const</span> karmaConfig = cfg.parseConfig(path.resolve(<span class=hljs-string>'../karma.conf.js'</span>));\n\n<span class=hljs-keyword>var</span> Server = karma.Server\n<span class=hljs-keyword>var</span> server = <span class=hljs-keyword>new</span> Server(karmaConfig, <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>exitCode</span>) </span>{\n  <span class=hljs-built_in>console</span>.log(<span class=hljs-string>'Karma has exited with '</span> + exitCode)\n  process.exit(exitCode)\n})\n\nserver.start()\n</code></pre></section></section><section><h2 id=常用插件 data-index=12>常用插件</h2><p>karma.conf.js</p><pre><code><span class=hljs-built_in>module</span>.exports = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>config</span>) </span>{\n    config.set({\n        <span class=hljs-attr>plugins</span>: [\n            <span class=hljs-string>\"karma-webpack\"</span>,\n            <span class=hljs-string>\"karma-chai\"</span>,\n            <span class=hljs-string>\"karma-chai-dom\"</span>,\n            <span class=hljs-string>'karma-coverage'</span>,\n            <span class=hljs-string>\"karma-spec-reporter\"</span>,\n            <span class=hljs-string>\"karma-sourcemap-loader\"</span>,\n            <span class=hljs-string>\"karma-mocha\"</span>,\n            <span class=hljs-comment>// 'karma-phantomjs-launcher',</span>\n            <span class=hljs-string>\"karma-chrome-launcher\"</span>\n        ]\n    })\n}\n</code></pre></section></section><section><h1 id=chai-dom data-index=13>chai-dom</h1><p><a href=http://travis-ci.org/nathanboktae/chai-dom><img src=https://secure.travis-ci.org/nathanboktae/chai-dom.png alt=\"Build Status\"></a></p><p>chai-dom is an extension to the <a href=http://chaijs.com/ >chai</a> assertion library that provides a set of assertions when working with the DOM (specifically <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> and <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a>)</p><p>Forked from <a href=https://github.com/chaijs/chai-jquery>chai-jquery</a> to use for those of us freed of jQuery&#39;s baggage.</p><section><h2 id=Assertions data-index=14>Assertions</h2><section><h3 id=\"attr(name[, value])\" data-index=15><code>attr(name[, value])</code></h3></section><section><h3 id=\"attribute(name[, value])\" data-index=16><code>attribute(name[, value])</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> has the given attribute, using <a href=https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute><code>getAttribute</code></a>. Optionally, assert a particular value as well. The return value is available for chaining.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.getElementById(<span class=hljs-string>'header'</span>).should.have.attr(<span class=hljs-string>'foo'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'main article'</span>)).to.have.attribute(<span class=hljs-string>'foo'</span>, <span class=hljs-string>'bar'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'main article'</span>)).to.have.attr(<span class=hljs-string>'foo'</span>).match(<span class=hljs-regexp>/bar/</span>)\n</code></pre></section><section><h3 id=class(className) data-index=17><code>class(className)</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> has the given class, using <a href=https://developer.mozilla.org/en-US/docs/Web/API/Element/classList><code>classList</code></a>.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.getElementsByName(<span class=hljs-string>'bar'</span>).should.have.class(<span class=hljs-string>'foo'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'main article'</span>)).to.have.class(<span class=hljs-string>'foo'</span>)\n</code></pre></section><section><h3 id=id(id) data-index=18><code>id(id)</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> has the given id.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'section'</span>).should.have.id(<span class=hljs-string>'#main'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'section'</span>)).to.have.id(<span class=hljs-string>'foo'</span>)\n</code></pre></section><section><h3 id=html(html) data-index=19><code>html(html)</code></h3><p>Assert that the html of the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> is equal to or contains the given html.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'.name'</span>).should.have.html(<span class=hljs-string>'&lt;em&gt;John Doe&lt;/em&gt;'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'#title'</span>)).to.have.html(<span class=hljs-string>'Chai Tea'</span>)\n</code></pre><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'.name'</span>).should.contain.html(<span class=hljs-string>'&lt;span&gt;Doe&lt;/span&gt;'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'#title'</span>)).to.contain.html(<span class=hljs-string>'&lt;em&gt;Tea&lt;/em&gt;'</span>)\n</code></pre></section><section><h3 id=text(text) data-index=20><code>text(text)</code></h3><p>Assert that the text of the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> or combined text of the <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a> is equal to or contains the given text, using <a href=https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent><code>textContent</code></a>.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'.name'</span>).should.have.text(<span class=hljs-string>'John Doe'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'#title'</span>)).to.have.text(<span class=hljs-string>'Chai Tea'</span>)\n<span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'ul li'</span>).should.have.text(<span class=hljs-string>'JohnJaneJessie'</span>)\n</code></pre><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'.name'</span>).should.contain.text(<span class=hljs-string>'John'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'#title'</span>)).to.contain.text(<span class=hljs-string>'Chai'</span>)\n<span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'ul li'</span>).should.contain.text(<span class=hljs-string>'Jane'</span>)\n</code></pre></section><section><h3 id=text(text[]) data-index=21><code>text(text[])</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent><code>textContent</code></a> of the <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a> children deep equal those text, or when using the contains flag, all the text items are somewhere in the <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a>.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'.name'</span>).should.have.text([<span class=hljs-string>'John Doe'</span>, <span class=hljs-string>'Jane'</span>])\nexpect(<span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'ul li'</span>)).to.have.text([<span class=hljs-string>'John'</span>, <span class=hljs-string>'Jane'</span>, <span class=hljs-string>'Jessie'</span>])\n</code></pre><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'.name'</span>).should.contain.text([<span class=hljs-string>'John Doe'</span>])\nexpect(<span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'ul li'</span>)).to.contain.text([<span class=hljs-string>'John'</span>, <span class=hljs-string>'Jessie'</span>])\n</code></pre></section><section><h3 id=value(value) data-index=22><code>value(value)</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> has the given value</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'.name'</span>).should.have.value(<span class=hljs-string>'John Doe'</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'input.year'</span>)).to.have.value(<span class=hljs-string>'2012'</span>)\n</code></pre></section><section><h3 id=empty data-index=23><code>empty</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> or <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a> has no child nodes. If the object asserted against is neither of those, the original implementation will be called.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'.empty'</span>).should.be.empty\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'section'</span>)).not.to.be.empty\n</code></pre></section><section><h3 id=length(n) data-index=24><code>length(n)</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> or <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a> has exactly <code>n</code> child nodes. If the object asserted against is neither of those, the original implementation will be called.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'ul'</span>).should.have.length(<span class=hljs-number>2</span>)\n<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'li'</span>).should.have.length(<span class=hljs-number>2</span>)\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'ul'</span>)).not.to.have.length(<span class=hljs-number>3</span>)\n</code></pre></section><section><h3 id=exist data-index=25><code>exist</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a> is not empty. If the object asserted against is not a <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a>, the original implementation will be called.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'dl dd'</span>).should.exist\nexpect(<span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'.nonexistent'</span>)).not.to.exist\n</code></pre></section><section><h3 id=match(selector) data-index=26><code>match(selector)</code></h3><p>Assert that the selection matches an <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> or all elements in a <a href=https://developer.mozilla.org/en-US/docs/Web/API/NodeList>NodeList</a>, using <a href=https://developer.mozilla.org/en-US/docs/Web/API/Element/matches><code>matches</code></a>. If the object asserted against is neither of those, the original implementation will be called.</p><p>Note <code>matches</code> is DOM Level 4, so you may <a href=https://github.com/WebReflection/dom4>need a polyfill</a> for it.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelectorAll(<span class=hljs-string>'input'</span>).should.match(<span class=hljs-string>'[name=\"bar\"]'</span>)\nexpect(<span class=hljs-built_in>document</span>.getElementById(<span class=hljs-string>'empty'</span>)).to.match(<span class=hljs-string>'.disabled'</span>)\n</code></pre></section><section><h3 id=\"contain(selector or element)\" data-index=27><code>contain(selector or element)</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> contains the given element, using <a href=https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll><code>querySelectorAll</code></a> for selector strings or using <a href=https://developer.mozilla.org/en-US/docs/Web/API/Node/contains><code>contains</code></a> for elements. If the object asserted against is not an <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a>, or if <code>contain</code> is not called as a function, the original implementation will be called.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'section'</span>).should.contain(<span class=hljs-string>'ul.items'</span>)\n<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'section'</span>).should.contain(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'section div'</span>))\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'#content'</span>)).to.contain(<span class=hljs-string>'p'</span>)\n</code></pre></section><section><h3 id=displayed data-index=28><code>displayed</code></h3><p>Assert that the <a href=https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>HTMLElement</a> is displayed (that display is not equal to &quot;none&quot;). If the element is attached to the body, it will call <a href=https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle><code>getComputedStyle</code></a>; otherwise it will look at the inline display attribute.</p><pre><code class=lang-js><span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'dl dd'</span>).should.be.displayed\nexpect(<span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>'.hidden'</span>)).not.to.be.displayed\n</code></pre></section></section><section><h2 id=Installation data-index=29>Installation</h2><section><h3 id=npm data-index=30>npm</h3><pre><code>npm install chai-dom\n</code></pre></section><section><h3 id=bower data-index=31>bower</h3><pre><code>bower install chai-dom\n</code></pre></section></section><section><h2 id=Usage data-index=32>Usage</h2><section><h3 id=CommonJS data-index=33>CommonJS</h3><pre><code class=lang-javascript><span class=hljs-keyword>var</span> chai = <span class=hljs-built_in>require</span>(<span class=hljs-string>'chai'</span>)\nchai.use(<span class=hljs-built_in>require</span>(<span class=hljs-string>'chai-dom'</span>))\n</code></pre></section><section><h3 id=AMD data-index=34>AMD</h3><pre><code class=lang-javascript><span class=hljs-built_in>require</span>([<span class=hljs-string>'chai'</span>, <span class=hljs-string>'chai-dom'</span>], <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>chai, chaiDom</span>) </span>{\n  chai.use(chaiDom)\n})\n</code></pre></section><section><h3 id=Global data-index=35>Global</h3><pre><code class=lang-html><span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>\"chai.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>\"chai-dom.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n</code></pre><p>Use the assertions with chai&#39;s <code>expect</code> or <code>should</code> assertions.</p></section></section><section><h2 id=Contributing data-index=36>Contributing</h2><p>To run the test suite, run <code>npm install</code> (requires <a href=http://nodejs.org/ >Node.js</a> to be installed on your system), and run <code>npm test</code> or open <code>test/index.html</code> in your web browser.</p></section><section><h2 id=License data-index=37>License</h2><p>MIT License (see the LICENSE file)</p></section></section><section><h1 id=\"config 选项\" data-index=38>config 选项</h1><section><h2 id=plugins data-index=39>plugins</h2><p>此选项可选：</p><ul><li>给值：只加载指定插件</li><li>不给值：加载所有插件</li></ul><p>karma.conf.js</p><pre><code><span class=hljs-built_in>module</span>.exports = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>config</span>) </span>{\n    config.set({\n        <span class=hljs-attr>plugins</span>: [\n            <span class=hljs-string>\"karma-webpack\"</span>,\n            <span class=hljs-string>\"karma-chai\"</span>,\n            <span class=hljs-string>\"karma-chai-dom\"</span>,\n            <span class=hljs-string>'karma-coverage'</span>,\n            <span class=hljs-string>\"karma-spec-reporter\"</span>,\n            <span class=hljs-string>\"karma-sourcemap-loader\"</span>,\n            <span class=hljs-string>\"karma-mocha\"</span>,\n            <span class=hljs-comment>// 'karma-phantomjs-launcher',</span>\n            <span class=hljs-string>\"karma-chrome-launcher\"</span>\n        ]\n    })\n}\n</code></pre></section></section><section><h1 id=入门、工具列表... data-index=40>入门、工具列表...</h1><section><h2 id=工具列表 data-index=41>工具列表</h2><ul><li>测试管理工具：<a href=http://karma-runner.github.io/1.0/index.html>Karma</a></li><li>测试框架：<a href=https://mochajs.org/ >Mocha</a></li><li>断言库：Jest、Jasmine、<a href=http://chaijs.com/guide/ >chai.js</a></li><li>接口模拟 <a href=https://www.easy-mock.com/ >easy mock</a> 似乎无法本地代理此模拟接口</li><li>reactjs 测试： <a href=http://airbnb.io/enzyme/ >enzyme</a></li><li>web app|站点 测试：<a href=http://nightwatchjs.org/ >Nightwatch.js</a></li></ul><p>可以这么组合：karma + Mocha + chai.js、Karma + Jasmine</p></section><section><h2 id=好处 data-index=42>好处</h2><ul><li>放心大胆重构：代码重构时可保证安全性，即保证功能完整</li><li>测试用例相当于API文档</li><li>迫使编写更易于维护的代码：因为需尽量做到让编写的每个单元都可单独测试</li></ul></section><section><h2 id=\"webdriver 实验\" data-index=43>webdriver 实验</h2><p><a href=https://www.npmjs.com/package/selenium-webdriver>可模拟浏览器点击的测试框架：selenium-webdriver</a></p><p><a href=http://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElement.html>http://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElement.html</a></p><pre><code class=lang-js><span class=hljs-keyword>var</span> webdriver = <span class=hljs-built_in>require</span>(<span class=hljs-string>'selenium-webdriver'</span>),\n    By = webdriver.By,\n    until = webdriver.until;\n\n<span class=hljs-keyword>var</span> driver = <span class=hljs-keyword>new</span> webdriver.Builder()\n    .forBrowser(<span class=hljs-string>'firefox'</span>)\n    .build();\n\ndriver.get(<span class=hljs-string>'https://www.baidu.com/'</span>);\ndriver.findElement(By.id(<span class=hljs-string>'kw'</span>)).sendKeys(<span class=hljs-string>'123'</span>);\ndriver.findElement(By.id(<span class=hljs-string>'su'</span>)).click();\ndriver.wait(until.titleIs(<span class=hljs-string>'百度一下，你就知道'</span>), <span class=hljs-number>1000</span>);\ndriver.quit();\n</code></pre></section><section><h2 id=参考学习 data-index=44>参考学习</h2><p><a href=https://www.douban.com/note/334051223/ >为什么要做测试？karma的使用</a></p><p><a href=https://github.com/tmallfe/tmallfe.github.io/issues/37>https://github.com/tmallfe/tmallfe.github.io/issues/37</a></p><p><a href=http://www.jianshu.com/p/6726c0410650>http://www.jianshu.com/p/6726c0410650</a></p><p><a href=http://taobaofed.org/blog/2016/01/08/karma-origin/ >http://taobaofed.org/blog/2016/01/08/karma-origin/</a></p></section></section><section><h1 id=\"mocha API 使用\" data-index=45>mocha API 使用</h1><section><h2 id=异步测试 data-index=46>异步测试</h2><p><strong>可利用此方式查看输出到测试浏览器中的对象：</strong> 测试执行完后，测试浏览器输出的对象被销毁，无法查看，可通过此方式暂停运行，查看输出的对象</p><p>默认超时时间为2s，超时后自动执行done。超时时间可设置</p><pre><code class=lang-js>describe(<span class=hljs-string>'加法函数的测试'</span>, <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n  it(<span class=hljs-string>'测试应该5000毫秒后结束'</span>, <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>done</span>) </span>{\n    <span class=hljs-keyword>this</span>.timeout(<span class=hljs-number>5000</span>);<span class=hljs-comment>//设置超时时间为5s</span>\n    <span class=hljs-keyword>var</span> x = <span class=hljs-literal>true</span>;\n    <span class=hljs-keyword>var</span> f = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n      x = <span class=hljs-literal>false</span>;\n      expect(x).to.be.not.ok;\n      done(); <span class=hljs-comment>// 通知Mocha测试结束</span>\n    };\n    setTimeout(f, <span class=hljs-number>4000</span>);\n  });\n});\n</code></pre></section></section><section><h1 id=思想 data-index=47>思想</h1><p>只测试功能接口。没必要测试内部所有实现</p></section><section><h1 id=断言学习 data-index=48>断言学习</h1><p><a href=http://shouldjs.github.io/ >should 语法</a><br><a href=https://github.com/Automattic/expect.js>expect 语法</a></p><p><a href=http://www.jianshu.com/p/c7c86b8f376c>断言介绍 - 简书</a> : 部分摘抄</p><pre><code class=lang-js><span class=hljs-comment>// equal 相等或不相等</span>\nexpect(<span class=hljs-number>4</span> + <span class=hljs-number>5</span>).to.be.equal(<span class=hljs-number>9</span>);\nexpect(<span class=hljs-number>4</span> + <span class=hljs-number>5</span>).to.be.not.equal(<span class=hljs-number>10</span>);\nexpect(<span class=hljs-string>'hello'</span>).to.equal(<span class=hljs-string>'hello'</span>);  \nexpect(<span class=hljs-number>42</span>).to.equal(<span class=hljs-number>42</span>);  \nexpect(<span class=hljs-number>1</span>).to.not.equal(<span class=hljs-literal>true</span>);  \nexpect({ <span class=hljs-attr>foo</span>: <span class=hljs-string>'bar'</span> }).to.not.equal({ <span class=hljs-attr>foo</span>: <span class=hljs-string>'bar'</span> });  \nexpect({ <span class=hljs-attr>foo</span>: <span class=hljs-string>'bar'</span> }).to.deep.equal({ <span class=hljs-attr>foo</span>: <span class=hljs-string>'bar'</span> });\n\n<span class=hljs-comment>// above 断言目标的值大于某个value,如果前面有length的链式标记，则可以用来判断数组长度或者字符串长度</span>\nexpect(<span class=hljs-number>10</span>).to.be.above(<span class=hljs-number>5</span>);\nexpect(<span class=hljs-string>'foo'</span>).to.have.length.above(<span class=hljs-number>2</span>);  \nexpect([ <span class=hljs-number>1</span>, <span class=hljs-number>2</span>, <span class=hljs-number>3</span> ]).to.have.length.above(<span class=hljs-number>2</span>); \n类似的还有least(value)表示大于等于；below(value)表示小于；most(value)表示小于等于\n\n<span class=hljs-comment>// 判断目标是否为布尔值true（隐式转换）</span>\nexpect(<span class=hljs-string>'everthing'</span>).to.be.ok;\nexpect(<span class=hljs-number>1</span>).to.be.ok;  \nexpect(<span class=hljs-literal>false</span>).to.not.be.ok;\nexpect(<span class=hljs-literal>undefined</span>).to.not.be.ok;  \nexpect(<span class=hljs-literal>null</span>).to.not.be.ok; \n\n<span class=hljs-comment>// true/false 断言目标是否为true或false</span>\nexpect(<span class=hljs-literal>true</span>).to.be.true;  \nexpect(<span class=hljs-number>1</span>).to.not.be.true;\nexpect(<span class=hljs-literal>false</span>).to.be.false;  \nexpect(<span class=hljs-number>0</span>).to.not.be.false;\n\n<span class=hljs-comment>// null/undefined 断言目标是否为null/undefined</span>\nexpect(<span class=hljs-literal>null</span>).to.be.null;  \nexpect(<span class=hljs-literal>undefined</span>).not.to.be.null;\nexpect(<span class=hljs-literal>undefined</span>).to.be.undefined;  \nexpect(<span class=hljs-literal>null</span>).to.not.be.undefined;\n\n\n<span class=hljs-comment>// NaN  断言目标值不是数值</span>\nexpect(<span class=hljs-string>'foo'</span>).to.be.NaN;\nexpect(<span class=hljs-number>4</span>).not.to.be.NaN;\n\n<span class=hljs-comment>// 判断类型大法(可以实现上面的一些例子):a/an</span>\nexpect(<span class=hljs-string>'test'</span>).to.be.a(<span class=hljs-string>'string'</span>);\nexpect({ <span class=hljs-attr>foo</span>: <span class=hljs-string>'bar'</span> }).to.be.an(<span class=hljs-string>'object'</span>);\nexpect(foo).to.be.an.instanceof(Foo);\nexpect(<span class=hljs-literal>null</span>).to.be.a(<span class=hljs-string>'null'</span>);  \nexpect(<span class=hljs-literal>undefined</span>).to.be.an(<span class=hljs-string>'undefined'</span>);\nexpect(<span class=hljs-keyword>new</span> <span class=hljs-built_in>Error</span>).to.be.an(<span class=hljs-string>'error'</span>);\nexpect(<span class=hljs-keyword>new</span> <span class=hljs-built_in>Promise</span>).to.be.a(<span class=hljs-string>'promise'</span>);\n\n<span class=hljs-comment>// 包含关系:用来断言字符串包含和数组包含。如果用在链式调用中，可以用来测试对象是否包含某key 可以混着用。</span>\nexpect([<span class=hljs-number>1</span>,<span class=hljs-number>2</span>,<span class=hljs-number>3</span>]).to.include(<span class=hljs-number>2</span>);\nexpect(<span class=hljs-string>'foobar'</span>).to.contain(<span class=hljs-string>'foo'</span>);\nexpect({ <span class=hljs-attr>foo</span>: <span class=hljs-string>'bar'</span>, <span class=hljs-attr>hello</span>: <span class=hljs-string>'universe'</span> }).to.include.keys(<span class=hljs-string>'foo'</span>);\n\n<span class=hljs-comment>// 判断空值</span>\nexpect([]).to.be.empty;\nexpect(<span class=hljs-string>''</span>).to.be.empty;\nexpect({}).to.be.empty;\n\n<span class=hljs-comment>// match</span>\nexpect(<span class=hljs-string>'foobar'</span>).to.match(<span class=hljs-regexp>/^foo/</span>);\n\n<span class=hljs-comment>// exist 断言目标既不是null也不是undefined</span>\n<span class=hljs-keyword>var</span> foo = <span class=hljs-string>'hi'</span> , bar = <span class=hljs-literal>null</span>, baz;\nexpect(foo).to.exist;  \nexpect(bar).to.not.exist;  \nexpect(baz).to.not.exist;\n\n<span class=hljs-comment>// within断言目标值在某个区间范围内，可以与length连用</span>\nexpect(<span class=hljs-number>7</span>).to.be.within(<span class=hljs-number>5</span>,<span class=hljs-number>10</span>);  \nexpect(<span class=hljs-string>'foo'</span>).to.have.length.within(<span class=hljs-number>2</span>,<span class=hljs-number>4</span>);  \nexpect([ <span class=hljs-number>1</span>, <span class=hljs-number>2</span>, <span class=hljs-number>3</span> ]).to.have.length.within(<span class=hljs-number>2</span>,<span class=hljs-number>4</span>);\n\n<span class=hljs-comment>// instanceOf 断言目标是某个构造器产生的事例</span>\n<span class=hljs-keyword>var</span> Tea = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>name</span>) </span>{ <span class=hljs-keyword>this</span>.name = name; } , Chai = <span class=hljs-keyword>new</span> Tea(<span class=hljs-string>'chai'</span>);\nexpect(Chai).to.be.an.instanceof(Tea);  \nexpect([ <span class=hljs-number>1</span>, <span class=hljs-number>2</span>, <span class=hljs-number>3</span> ]).to.be.instanceof(<span class=hljs-built_in>Array</span>); \n\n<span class=hljs-comment>// property(name, [value])  断言目标有以name为key的属性,并且可以指定value断言属性值是严格相等的,此[value]参数为可选,如果使用deep链式调用,可以在name中指定对象或数组的引用表示方法</span>\n<span class=hljs-comment>// simple referencing</span>\n<span class=hljs-keyword>var</span> obj = { <span class=hljs-attr>foo</span>: <span class=hljs-string>'bar'</span> };  \nexpect(obj).to.have.property(<span class=hljs-string>'foo'</span>);  \nexpect(obj).to.have.property(<span class=hljs-string>'foo'</span>, <span class=hljs-string>'bar'</span>);<span class=hljs-comment>// 类似于expect(obj).to.contains.keys('foo')</span>\n\n<span class=hljs-comment>// deep referencing</span>\n<span class=hljs-keyword>var</span> deepObj = {  \n  <span class=hljs-attr>green</span>: { <span class=hljs-attr>tea</span>: <span class=hljs-string>'matcha'</span> },\n  <span class=hljs-attr>teas</span>: [ <span class=hljs-string>'chai'</span>, <span class=hljs-string>'matcha'</span>, { <span class=hljs-attr>tea</span>: <span class=hljs-string>'konacha'</span> } ]\n};\nexpect(deepObj).to.have.deep.property(<span class=hljs-string>'green.tea'</span>, <span class=hljs-string>'matcha'</span>);  \nexpect(deepObj).to.have.deep.property(<span class=hljs-string>'teas[1]'</span>, <span class=hljs-string>'matcha'</span>);  \nexpect(deepObj).to.have.deep.property(<span class=hljs-string>'teas[2].tea'</span>, <span class=hljs-string>'konacha'</span>); \n\n<span class=hljs-comment>// ownproperty 断言目标拥有自己的属性，非原型链继承</span>\nexpect(<span class=hljs-string>'test'</span>).to.have.ownProperty(<span class=hljs-string>'length'</span>); \n\n<span class=hljs-comment>// throw 断言目标抛出特定的异常</span>\n<span class=hljs-keyword>var</span> err = <span class=hljs-keyword>new</span> <span class=hljs-built_in>ReferenceError</span>(<span class=hljs-string>'This is a bad function.'</span>);  \n<span class=hljs-keyword>var</span> fn = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{ <span class=hljs-keyword>throw</span> err; }  \nexpect(fn).to.throw(<span class=hljs-built_in>ReferenceError</span>);  \nexpect(fn).to.throw(<span class=hljs-built_in>Error</span>);  \nexpect(fn).to.throw(<span class=hljs-regexp>/bad function/</span>);  \nexpect(fn).to.not.throw(<span class=hljs-string>'good function'</span>);  \nexpect(fn).to.throw(<span class=hljs-built_in>ReferenceError</span>, /bad <span class=hljs-function><span class=hljs-keyword>function</span>/);  \n<span class=hljs-title>expect</span>(<span class=hljs-params>fn</span>).<span class=hljs-title>to</span>.<span class=hljs-title>throw</span>(<span class=hljs-params>err</span>);  \n<span class=hljs-title>expect</span>(<span class=hljs-params>fn</span>).<span class=hljs-title>to</span>.<span class=hljs-title>not</span>.<span class=hljs-title>throw</span>(<span class=hljs-params>new RangeError(<span class=hljs-string>'Out of range.'</span></span>));  \n\n// <span class=hljs-title>satisfy</span>(<span class=hljs-params>method</span>) 断言目标通过一个真值测试\n<span class=hljs-title>expect</span>(<span class=hljs-params><span class=hljs-number>1</span></span>).<span class=hljs-title>to</span>.<span class=hljs-title>satisfy</span>(<span class=hljs-params>function(num</span>) </span>{ <span class=hljs-keyword>return</span> num &gt; <span class=hljs-number>0</span>; })\n\n作者：艾伦先生\n链接：http:<span class=hljs-comment>//www.jianshu.com/p/c7c86b8f376c</span>\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n</code></pre><section><h2 id=chai-expect data-index=49>chai-expect</h2><pre><code class=lang-js><span class=hljs-comment>// 是否全等</span>\nexpect(<span class=hljs-number>1</span>).to.equal(<span class=hljs-number>1</span>)\n</code></pre></section></section><section><h1 id=\"环境：karma + mocha + chai\" data-index=50>环境：karma + mocha + chai</h1><section><h2 id=这里涉及的工具库： data-index=51>这里涉及的工具库：</h2><ul><li>karma：测试管理工具</li><li>mocha：测试框架</li><li>chai：断言库</li><li>webpack：实现 es6 语法转换</li></ul></section><section><h2 id=需要安装的包 data-index=52>需要安装的包</h2><p>测试相关：<br>mocha karma-mocha chai karma-chai</p><p>测试浏览器环境：<br>karma-chrome-launcher karma-phantomjs-launcher</p><p>es6 转换相关：<br>webpack<br>babel-core babel-loader babel-preset-env <a href=https://www.npmjs.com/package/karma-webpack>karma-webpack</a></p></section><section><h2 id=\"karma.config.js 参考\" data-index=53>karma.config.js 参考</h2><p>这里说明一下，并不需要设置 plugins 选项</p><pre><code class=lang-js><span class=hljs-comment>// Karma configuration</span>\n\n<span class=hljs-keyword>let</span> path = <span class=hljs-built_in>require</span>(<span class=hljs-string>'path'</span>)\n\n<span class=hljs-built_in>module</span>.exports = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>config</span>) </span>{\n  config.set({\n\n    <span class=hljs-comment>// base path that will be used to resolve all patterns (eg. files, exclude)</span>\n    basePath: <span class=hljs-string>''</span>,\n\n\n    <span class=hljs-comment>// frameworks to use</span>\n    <span class=hljs-comment>// available frameworks: https://npmjs.org/browse/keyword/karma-adapter</span>\n    frameworks: [<span class=hljs-string>'mocha'</span>,<span class=hljs-string>'chai'</span>],\n\n\n    <span class=hljs-comment>// list of files / patterns to load in the browser</span>\n    files: [\n      <span class=hljs-string>'./test/*.js'</span>\n    ],\n\n\n    <span class=hljs-comment>// list of files to exclude</span>\n    <span class=hljs-comment>// exclude: [</span>\n    <span class=hljs-comment>//   'You can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".',</span>\n    <span class=hljs-comment>//   'You can use glob patterns, eg. \"js/*.js\" or \"test/**/*Spec.js\".'</span>\n    <span class=hljs-comment>// ],</span>\n\n    <span class=hljs-comment>// preprocess matching files before serving them to the browser</span>\n    <span class=hljs-comment>// available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor</span>\n    preprocessors: {\n        <span class=hljs-string>'./test/*.js'</span>:[<span class=hljs-string>'webpack'</span>]\n    },\n\n    <span class=hljs-attr>webpack</span>:{\n      <span class=hljs-attr>module</span>: {\n        <span class=hljs-comment>//加载器配置</span>\n        rules: [\n          {\n            <span class=hljs-attr>test</span>: <span class=hljs-regexp>/\\.js$/</span>,\n            <span class=hljs-attr>exclude</span>: <span class=hljs-regexp>/node_modules/</span>,\n            <span class=hljs-attr>loader</span>: <span class=hljs-string>'babel-loader'</span>,\n            <span class=hljs-attr>options</span>: {\n              <span class=hljs-string>\"presets\"</span>: [<span class=hljs-string>\"env\"</span>],\n            }\n          }\n        ]\n      },\n    },\n    <span class=hljs-attr>webpackMiddleware</span>: {\n      <span class=hljs-attr>noInfo</span>: <span class=hljs-literal>true</span>\n    },\n\n    <span class=hljs-comment>// test results reporter to use</span>\n    <span class=hljs-comment>// possible values: 'dots', 'progress'</span>\n    <span class=hljs-comment>// available reporters: https://npmjs.org/browse/keyword/karma-reporter</span>\n    reporters: [<span class=hljs-string>'progress'</span>],\n\n    <span class=hljs-comment>// web server port</span>\n    port: <span class=hljs-number>9876</span>,\n\n    <span class=hljs-comment>// enable / disable colors in the output (reporters and logs)</span>\n    colors: <span class=hljs-literal>true</span>,\n\n    <span class=hljs-comment>// level of logging</span>\n    <span class=hljs-comment>// possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG</span>\n    logLevel: config.LOG_INFO,\n\n    <span class=hljs-comment>// enable / disable watching file and executing tests whenever any file changes</span>\n    autoWatch: <span class=hljs-literal>true</span>,\n\n    <span class=hljs-comment>// start these browsers</span>\n    <span class=hljs-comment>// available browser launchers: https://npmjs.org/browse/keyword/karma-launcher</span>\n    browsers: [<span class=hljs-string>'Chrome'</span>, <span class=hljs-string>'PhantomJS'</span>],\n\n    <span class=hljs-comment>// Continuous Integration mode</span>\n    <span class=hljs-comment>// if true, Karma captures browsers, runs the tests and exits</span>\n    singleRun: <span class=hljs-literal>false</span>,\n\n    <span class=hljs-comment>// Concurrency level</span>\n    <span class=hljs-comment>// how many browser should be started simultaneous</span>\n    concurrency: <span class=hljs-literal>Infinity</span>\n  })\n}\n</code></pre></section><section><h2 id=问题解决，注意项： data-index=54>问题解决，注意项：</h2><section><h3 id=\"karma 有依赖缺失问题：\" data-index=55>karma 有依赖缺失问题：</h3><p>勿使用淘宝镜像命令 cnpm 安装。 <strong>可使用 yarn</strong>，速度也很快</p></section></section><section><h2 id=\"test.js 代码说明范例\" data-index=56>test.js 代码说明范例</h2><pre><code><span class=hljs-keyword>import</span> {isNum,isString} <span class=hljs-keyword>from</span> <span class=hljs-string>'../src/index'</span>\n\ndescribe(<span class=hljs-string>'index.js的测试'</span>, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n    it(<span class=hljs-string>'1应该是数字'</span>, <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n        <span class=hljs-comment>// expect(isNum(1)).to.be.true</span>\n        isNum(<span class=hljs-number>1</span>).should.equal(<span class=hljs-literal>true</span>)\n    })\n    it(<span class=hljs-string>'\"1\" 应该是字符'</span>, <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n        <span class=hljs-comment>// expect(isString('1')).to.be.true</span>\n        isString(<span class=hljs-string>'1'</span>).should.equal(<span class=hljs-literal>true</span>)\n    })\n})\n</code></pre></section></section>","menu":"<div class=\"menu-item fold\"><div class=\"item\" data-index=\"0\"><i class=\"\"></i><span class=\"txt\">20170828 环境搭建总结，测试开始：带dom测试</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"1\"><i class=\"hidden\"></i><span class=\"txt\">需要安装的包</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"2\"><i class=\"hidden\"></i><span class=\"txt\">增加 dom 测试：karma-chai-dom 包</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"3\"><i class=\"hidden\"></i><span class=\"txt\">给 webpack 增加 sourcemap：karma-sourcemap-loader 包</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"4\"><i class=\"hidden\"></i><span class=\"txt\">karma.conf.js 配置参考，可直接用</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"5\"><i class=\"\"></i><span class=\"txt\">测试用例语法：mocha + chai</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"6\"><i class=\"hidden\"></i><span class=\"txt\">dom 测试, 完全的浏览器 dom api</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"7\"><i class=\"hidden\"></i><span class=\"txt\">异步测试</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"8\"><i class=\"hidden\"></i><span class=\"txt\">更详细的测试后报告 karma-spec-reporter</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"9\"><i class=\"\"></i><span class=\"txt\">开始测试</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"10\"><i class=\"hidden\"></i><span class=\"txt\">cli</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"11\"><i class=\"hidden\"></i><span class=\"txt\">Node.js API</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"12\"><i class=\"hidden\"></i><span class=\"txt\">常用插件</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"13\"><i class=\"\"></i><span class=\"txt\">chai-dom</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"14\"><i class=\"\"></i><span class=\"txt\">Assertions</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"15\"><i class=\"hidden\"></i><span class=\"txt\">attr(name[, value])</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"16\"><i class=\"hidden\"></i><span class=\"txt\">attribute(name[, value])</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"17\"><i class=\"hidden\"></i><span class=\"txt\">class(className)</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"18\"><i class=\"hidden\"></i><span class=\"txt\">id(id)</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"19\"><i class=\"hidden\"></i><span class=\"txt\">html(html)</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"20\"><i class=\"hidden\"></i><span class=\"txt\">text(text)</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"21\"><i class=\"hidden\"></i><span class=\"txt\">text(text[])</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"22\"><i class=\"hidden\"></i><span class=\"txt\">value(value)</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"23\"><i class=\"hidden\"></i><span class=\"txt\">empty</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"24\"><i class=\"hidden\"></i><span class=\"txt\">length(n)</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"25\"><i class=\"hidden\"></i><span class=\"txt\">exist</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"26\"><i class=\"hidden\"></i><span class=\"txt\">match(selector)</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"27\"><i class=\"hidden\"></i><span class=\"txt\">contain(selector or element)</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"28\"><i class=\"hidden\"></i><span class=\"txt\">displayed</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"29\"><i class=\"\"></i><span class=\"txt\">Installation</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"30\"><i class=\"hidden\"></i><span class=\"txt\">npm</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"31\"><i class=\"hidden\"></i><span class=\"txt\">bower</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"32\"><i class=\"\"></i><span class=\"txt\">Usage</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"33\"><i class=\"hidden\"></i><span class=\"txt\">CommonJS</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"34\"><i class=\"hidden\"></i><span class=\"txt\">AMD</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"35\"><i class=\"hidden\"></i><span class=\"txt\">Global</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"36\"><i class=\"hidden\"></i><span class=\"txt\">Contributing</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"37\"><i class=\"hidden\"></i><span class=\"txt\">License</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"38\"><i class=\"\"></i><span class=\"txt\">config 选项</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"39\"><i class=\"hidden\"></i><span class=\"txt\">plugins</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"40\"><i class=\"\"></i><span class=\"txt\">入门、工具列表...</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"41\"><i class=\"hidden\"></i><span class=\"txt\">工具列表</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"42\"><i class=\"hidden\"></i><span class=\"txt\">好处</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"43\"><i class=\"hidden\"></i><span class=\"txt\">webdriver 实验</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"44\"><i class=\"hidden\"></i><span class=\"txt\">参考学习</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"45\"><i class=\"\"></i><span class=\"txt\">mocha API 使用</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"46\"><i class=\"hidden\"></i><span class=\"txt\">异步测试</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"47\"><i class=\"hidden\"></i><span class=\"txt\">思想</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"48\"><i class=\"\"></i><span class=\"txt\">断言学习</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"49\"><i class=\"hidden\"></i><span class=\"txt\">chai-expect</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"50\"><i class=\"\"></i><span class=\"txt\">环境：karma + mocha + chai</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"51\"><i class=\"hidden\"></i><span class=\"txt\">这里涉及的工具库：</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"52\"><i class=\"hidden\"></i><span class=\"txt\">需要安装的包</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"53\"><i class=\"hidden\"></i><span class=\"txt\">karma.config.js 参考</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"54\"><i class=\"\"></i><span class=\"txt\">问题解决，注意项：</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"55\"><i class=\"hidden\"></i><span class=\"txt\">karma 有依赖缺失问题：</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"56\"><i class=\"hidden\"></i><span class=\"txt\">test.js 代码说明范例</span></div><div class=\"list\"></div></div></div></div>"}