{"article":"<h1 data-index=0>后代选择写法原则</h1><p>尽量控制在3层<br>模块 子模块 随意</p><h1 data-index=1>文本</h1><h2 data-index=2>不换行</h2><pre><code class=lang-css><span class=hljs-selector-class>.test</span>{\n    <span class=hljs-attribute>white-space</span>: nowrap;    \n}\n</code></pre><h2 data-index=3>裁剪</h2><p>快速拷贝代码：</p><pre><code class=lang-css><span class=hljs-selector-class>.test</span>{\n    <span class=hljs-attribute>width</span>:<span class=hljs-number>10px</span>;\n    <span class=hljs-attribute>overflow</span>:hidden;\n    <span class=hljs-attribute>text-overflow</span>:ellipsis;\n    <span class=hljs-attribute>white-space</span>: nowrap;    \n}\n</code></pre><p>兼容性：包括ie6的所有</p><h1 data-index=4>比例单位</h1><h2 data-index=5>em</h2><p>不会参照以 <code>[rm]</code> 单位的上级元素，固定找到设置为<code>[px]</code>的上级元素</p><p>只能用于字体单位？</p><h2 data-index=6>rem</h2><ul><li><p><strong>还可作为其他尺寸单位</strong></p></li><li><p><strong>兼容性：ie9+</strong></p></li></ul><ul><li><p><strong>chrome 最小 12px</strong><br>chrome html 最小字体为<code>12px</code>，小于<code>12px</code>的都按<code>12px</code>算。</p><p>ie9+、edge、firefox 都没有这个问题</p><p>代码所示，div width应该是700才对，可实际是1200。</p><pre><code class=lang-css><span class=hljs-selector-tag>html</span>{\n    <span class=hljs-attribute>font-size</span>:<span class=hljs-number>7px</span>\n}\n<span class=hljs-selector-tag>div</span>{\n    <span class=hljs-attribute>width</span>:<span class=hljs-number>100rem</span>;\n}\n</code></pre></li></ul><ul><li><p><strong>rem 自适应js备份</strong></p><pre><code class=lang-js><span class=hljs-comment>// 自适应</span>\n<span class=hljs-keyword>let</span> w = <span class=hljs-built_in>window</span>.innerWidth\n<span class=hljs-keyword>if</span> (w &lt; <span class=hljs-number>360</span>) {\n    <span class=hljs-comment>// browserWidth * p = fontSize</span>\n    <span class=hljs-comment>// 即：</span>\n    <span class=hljs-comment>// p = fontSize / browserWidth</span>\n    <span class=hljs-built_in>document</span>.documentElement.style.fontSize = w * <span class=hljs-number>0.28</span> + <span class=hljs-string>'px'</span>\n}\n</code></pre></li></ul><h2 data-index=7>px 转 rem (编辑器替换)</h2><p>使用正则替换</p><pre><code class=lang-js><span class=hljs-comment>// 匹配</span>\n(\\d+)px\n\n(\\d{<span class=hljs-number>0</span>,<span class=hljs-number>1</span>}\\.{<span class=hljs-number>0</span>,<span class=hljs-number>1</span>}\\d+)px   <span class=hljs-comment>// 支持小数点</span>\n\n<span class=hljs-comment>// 替换</span>\n($<span class=hljs-number>1</span>/<span class=hljs-number>100</span> + rem)\n</code></pre><p>还原border</p><pre><code class=lang-js><span class=hljs-comment>// 匹配</span>\n\\((\\d+)/.+\\) solid\n\n<span class=hljs-comment>// 替换</span>\n$<span class=hljs-number>1</span>px solid\n</code></pre><h1 data-index=8>postcss</h1><h2 data-index=9>@import 导入控制 - <code>postcss-smart-import</code> 插件</h2><p>webpack 中有部分说明 &gt; <a href=\"\">css模块导入依赖控制（webpack 中使用postcss 导入依赖问题）</a></p><h2 data-index=10>去掉斜杠注释，插件形式调用</h2><p><a href=https://github.com/moczolaszlo/postcss-inline-comment>https://github.com/moczolaszlo/postcss-inline-comment</a></p><pre><code class=lang-js><span class=hljs-built_in>module</span>.exports = {\n    <span class=hljs-attr>plugins</span>: [\n\n        <span class=hljs-built_in>require</span>(<span class=hljs-string>'postcss-inline-comment'</span>),\n\n        <span class=hljs-built_in>require</span>(<span class=hljs-string>'postcss-smart-import'</span>),\n        <span class=hljs-built_in>require</span>(<span class=hljs-string>'postcss-calc'</span>),\n        <span class=hljs-built_in>require</span>(<span class=hljs-string>'postcss-apply'</span>),\n        <span class=hljs-built_in>require</span>(<span class=hljs-string>'autoprefixer'</span>)({\n        <span class=hljs-attr>remove</span>: <span class=hljs-literal>false</span>\n        }),\n        <span class=hljs-built_in>require</span>(<span class=hljs-string>'postcss-custom-properties'</span>),\n        <span class=hljs-built_in>require</span>(<span class=hljs-string>'postcss-nested'</span>),\n        <span class=hljs-built_in>require</span>(<span class=hljs-string>'postcss-css-variables'</span>),\n    ]\n}\n</code></pre><h2 data-index=11>转换斜杠注释</h2><p><a href=https://github.com/moczolaszlo/postcss-inline-comment>https://github.com/moczolaszlo/postcss-inline-comment</a></p><p>webpack postcss-loader 使用</p><pre><code class=lang-js><span class=hljs-keyword>let</span> parser = <span class=hljs-built_in>require</span>(<span class=hljs-string>'postcss-comment'</span>)\n<span class=hljs-built_in>module</span>.exports = {\n    <span class=hljs-attr>module</span>: {\n        <span class=hljs-comment>// 加载器配置</span>\n        rules: [\n            {\n                <span class=hljs-attr>test</span>: <span class=hljs-regexp>/\\.(css|pcss)$/</span>,\n                <span class=hljs-attr>use</span>: ExtractTextPlugin.extract({\n                    <span class=hljs-attr>fallback</span>: <span class=hljs-string>'style-loader'</span>,\n                    <span class=hljs-attr>use</span>: [{\n                        <span class=hljs-attr>loader</span>: <span class=hljs-string>'css-loader'</span>, <span class=hljs-attr>options</span>: {\n                            <span class=hljs-attr>importLoaders</span>: <span class=hljs-number>1</span>,\n                            <span class=hljs-attr>sourceMap</span>: <span class=hljs-literal>true</span>\n                        }\n                    }, {\n                        <span class=hljs-attr>loader</span>: <span class=hljs-string>'postcss-loader'</span>,\n                        <span class=hljs-attr>options</span>: {\n                            <span class=hljs-attr>sourceMap</span>: <span class=hljs-string>'inline'</span>,\n                            parser\n                        }\n                    }]\n                }),\n            }\n        ]\n    }\n}\n</code></pre><h1 data-index=12>文本</h1><h2 data-index=13>word-spacing：html 空格宽度控制</h2><blockquote><p>关键字：空格 空格控制 空格宽度 空格大小</p></blockquote><pre><code class=lang-html><span class=hljs-tag>&lt;<span class=hljs-name>style</span>&gt;</span><span class=css>\n<span class=hljs-selector-class>.l-label</span>{\n    <span class=hljs-attribute>word-spacing</span>: <span class=hljs-number>30px</span>;    \n}\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>style</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>\"l-label\"</span>&gt;</span>行 为:<span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n</code></pre><p>&#39;行为&#39;文本之间有个空格，即控制此空格的间距</p><h1 data-index=14>毛玻璃</h1><p>毛玻璃。让元素变模糊 -webkit-filter: blur(3px);</p>","menu":"<div class=\"menu-item fold\"><div class=\"item\" data-index=\"0\"><i class=\"hidden\"></i><span class=\"txt\">后代选择写法原则</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"1\"><i class=\"\"></i><span class=\"txt\">文本</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"2\"><i class=\"hidden\"></i><span class=\"txt\">不换行</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"3\"><i class=\"hidden\"></i><span class=\"txt\">裁剪</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"4\"><i class=\"\"></i><span class=\"txt\">比例单位</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"5\"><i class=\"hidden\"></i><span class=\"txt\">em</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"6\"><i class=\"hidden\"></i><span class=\"txt\">rem</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"7\"><i class=\"hidden\"></i><span class=\"txt\">px 转 rem (编辑器替换)</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"8\"><i class=\"\"></i><span class=\"txt\">postcss</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"9\"><i class=\"hidden\"></i><span class=\"txt\">@import 导入控制 - <code>postcss-smart-import</code> 插件</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"10\"><i class=\"hidden\"></i><span class=\"txt\">去掉斜杠注释，插件形式调用</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"11\"><i class=\"hidden\"></i><span class=\"txt\">转换斜杠注释</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"12\"><i class=\"\"></i><span class=\"txt\">文本</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"13\"><i class=\"hidden\"></i><span class=\"txt\">word-spacing：html 空格宽度控制</span></div><div class=\"list\"></div></div></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"14\"><i class=\"hidden\"></i><span class=\"txt\">毛玻璃</span></div><div class=\"list\"></div></div>"}