{"article":"<section><h1 id=\"vuex 简单总结\" data-index=0>vuex 简单总结</h1><section><h2 id=获取状态 data-index=1>获取状态</h2><p>组件中的计算属性，通过辅助函数 mapState mapGetters 更方便</p></section><section><h2 id=修改状态 data-index=2>修改状态</h2><p>首先通过 Mutation、Action 选项定义修改的事件函数，然后组件中调用执行，比如 <code>store.commit(&#39;increment&#39;)</code> 、<code>store.dispatch(&#39;increment&#39;)</code></p><p>可通过辅助函数 mapMutations、mapActions 快捷绑定成组件方法</p></section><section><h2 id=新加状态 data-index=3>新加状态</h2><p>后期添加可响应的状态，遵守 Vue 的响应规则</p><p>依然在 Mutation、Action 中进行</p><ul><li><p>使用 Vue.set(obj, &#39;newProp&#39;, 123), 或者</p></li><li><p>以新对象替换老对象。例如，利用 stage-3 的对象展开运算符我们可以这样写：</p><pre><code>state.obj = { ...state.obj, newProp: 123 }\n</code></pre></li></ul></section><section><h2 id=State data-index=4>State</h2><p>相对于 data</p></section><section><h2 id=Getter data-index=5>Getter</h2><p>其实就是 State 的计算属性或者方法函数</p></section><section><h2 id=Mutation data-index=6>Mutation</h2><p>相当于事件声明，同步修改 State。为什么必须同步，为了状态可跟踪</p><p>组件中触发 <code>store.commit(&#39;increment&#39;)</code></p></section><section><h2 id=Action data-index=7>Action</h2><p>Mutation 扩展，实现异步</p><p>组件中触发 <code>store.dispatch(&#39;increment&#39;)</code></p></section><section><h2 id=Module data-index=8>Module</h2><p>命名空间，模块嵌套</p></section><section><h2 id=都有对应的辅助函数 data-index=9>都有对应的辅助函数</h2><p>方便在组件中使用</p></section></section>","menu":"<div class=\"menu-item fold\"><div class=\"item\" data-index=\"0\"><i class=\"\"></i><span class=\"txt\">vuex 简单总结</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"1\"><i class=\"hidden\"></i><span class=\"txt\">获取状态</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"2\"><i class=\"hidden\"></i><span class=\"txt\">修改状态</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"3\"><i class=\"hidden\"></i><span class=\"txt\">新加状态</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"4\"><i class=\"hidden\"></i><span class=\"txt\">State</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"5\"><i class=\"hidden\"></i><span class=\"txt\">Getter</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"6\"><i class=\"hidden\"></i><span class=\"txt\">Mutation</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"7\"><i class=\"hidden\"></i><span class=\"txt\">Action</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"8\"><i class=\"hidden\"></i><span class=\"txt\">Module</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"9\"><i class=\"hidden\"></i><span class=\"txt\">都有对应的辅助函数</span></div><div class=\"list\"></div></div></div></div>"}