{"article":"<section><h1 id=学习 data-index=0>学习</h1><p>[toc]</p><section><h2 id=\"创建 store 实例，store 修改\" data-index=1>创建 store 实例，store 修改</h2><pre><code class=lang-js><span class=hljs-comment>// 确保在开头调用了 Vue.use(Vuex)</span>\nVue.use(Vuex)\n\n<span class=hljs-keyword>const</span> store = <span class=hljs-keyword>new</span> Vuex.Store({\n  <span class=hljs-attr>state</span>: {\n    <span class=hljs-attr>count</span>: <span class=hljs-number>0</span>\n  },\n  <span class=hljs-attr>mutations</span>: {\n    increment (state) {\n      state.count++\n    }\n  }\n})\n</code></pre><p>store 修改，通过 mutations</p><pre><code class=lang-js>store.commit(<span class=hljs-string>'increment'</span>)\n\n<span class=hljs-built_in>console</span>.log(store.state.count) <span class=hljs-comment>// -&gt; 1</span>\n</code></pre><p>把 store 的实例注入所有的子组件</p><pre><code class=lang-js>\nconst app = new Vue({\n  el: '#app',\n  // 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件\n  store,\n  components: { Counter },\n  template: `\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>\"app\"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>counter</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>counter</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  `\n})\n</code></pre></section><section><h2 id=组件中使用：通过计算属性能方便获取 data-index=2>组件中使用：通过计算属性能方便获取</h2><pre><code class=lang-js><span class=hljs-keyword>const</span> Counter = {\n  <span class=hljs-attr>template</span>: <span class=hljs-string>`&lt;div&gt;{{ count }}&lt;/div&gt;`</span>,\n  <span class=hljs-attr>computed</span>: {\n    count () {\n      <span class=hljs-keyword>return</span> <span class=hljs-keyword>this</span>.$store.state.count\n    }\n  }\n}\n</code></pre><p>使用 <a href=https://vuex.vuejs.org/zh-cn/state.html#mapstate-辅助函数>mapState 辅助函</a> 数能方便添加计算属性</p></section><section><h2 id=\"使用 Getter 添加能运算的 store\" data-index=3>使用 Getter 添加能运算的 store</h2><pre><code class=lang-js><span class=hljs-keyword>const</span> store = <span class=hljs-keyword>new</span> Vuex.Store({\n  <span class=hljs-attr>state</span>: {\n    <span class=hljs-attr>todos</span>: [\n      { <span class=hljs-attr>id</span>: <span class=hljs-number>1</span>, <span class=hljs-attr>text</span>: <span class=hljs-string>'...'</span>, <span class=hljs-attr>done</span>: <span class=hljs-literal>true</span> },\n      { <span class=hljs-attr>id</span>: <span class=hljs-number>2</span>, <span class=hljs-attr>text</span>: <span class=hljs-string>'...'</span>, <span class=hljs-attr>done</span>: <span class=hljs-literal>false</span> }\n    ]\n  },\n  <span class=hljs-attr>getters</span>: {\n    <span class=hljs-attr>doneTodos</span>: <span class=hljs-function><span class=hljs-params>state</span> =&gt;</span> {\n      <span class=hljs-keyword>return</span> state.todos.filter(<span class=hljs-function><span class=hljs-params>todo</span> =&gt;</span> todo.done)\n    }\n  }\n})\n</code></pre><p>使用 <a href=https://vuex.vuejs.org/zh-cn/getters.html#mapgetters-辅助函数>mapGetters 辅助函数</a> 数能方便的将 Getter 添加到组件计算属性中</p></section><section><h2 id=如何添加新的响应属性 data-index=4>如何添加新的响应属性</h2><p><a href=https://vuex.vuejs.org/zh-cn/mutations.html/mutation-需遵守-vue-的响应规则>mutation-需遵守-vue-的响应规</a></p></section></section>","menu":"<div class=\"menu-item fold\"><div class=\"item\" data-index=\"0\"><i class=\"\"></i><span class=\"txt\">学习</span></div><div class=\"list\"><div class=\"menu-item fold\"><div class=\"item\" data-index=\"1\"><i class=\"hidden\"></i><span class=\"txt\">创建 store 实例，store 修改</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"2\"><i class=\"hidden\"></i><span class=\"txt\">组件中使用：通过计算属性能方便获取</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"3\"><i class=\"hidden\"></i><span class=\"txt\">使用 Getter 添加能运算的 store</span></div><div class=\"list\"></div></div><div class=\"menu-item fold\"><div class=\"item\" data-index=\"4\"><i class=\"hidden\"></i><span class=\"txt\">如何添加新的响应属性</span></div><div class=\"list\"></div></div></div></div>"}