window['cb_vue']({"outline":[{"id":"3054897540","level":1,"name":"实例挂载","children":[{"id":"3140006129","level":2,"name":"$mount 多次调用不会更改挂载元素，也不会发生重新挂载","children":[]},{"id":"4241536454","level":2,"name":"实例未挂载，其子组件不会初始","children":[]}]},{"id":"3704777682","level":1,"name":"计算属性可进行设置操作","children":[]},{"id":"4202073935","level":1,"name":"keep-alive 缓存","children":[]},{"id":"1255288539","level":1,"name":"mixin","children":[]},{"id":"3971168449","level":1,"name":"slot","children":[]},{"id":"2803339297","level":1,"name":"router-view 加 key","children":[]},{"id":"2062739268","level":1,"name":"组件直接渲染到 document 中","children":[]},{"id":"3606520594","level":1,"name":"改变 document 位置的组件销毁时不会被删除","children":[]},{"id":"4219515659","level":1,"name":"$scopedSlot 与 $slot 区别","children":[]}],"content":"<section><h1 id=\"3054897540\">实例挂载</h1><section><h2 id=\"3140006129\">$mount 多次调用不会更改挂载元素，也不会发生重新挂载</h2></section><section><h2 id=\"4241536454\">实例未挂载，其子组件不会初始</h2><p>main.js</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app.vue'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  <span class=\"hljs-comment\">// el: '#app', // 不挂在元素</span>\n  created() {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'created'</span>) <span class=\"hljs-comment\">// 触发</span>\n  },\n  mounted() {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'mounted'</span>) <span class=\"hljs-comment\">// 不触发</span>\n  },\n  router,\n  <span class=\"hljs-attr\">template</span>: <span class=\"hljs-string\">'&lt;app/&gt;'</span>,\n  <span class=\"hljs-attr\">components</span>: {\n    App,\n  },\n})</code></pre>\n<p>App.vue</p>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>App<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    beforeCreate() {\n      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'app beforeCreate'</span>) <span class=\"hljs-comment\">// 不触发</span>\n    },\n    created() {\n      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'app created'</span>) <span class=\"hljs-comment\">// 不触发</span>\n    },\n    mounted() {\n      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'app mounted'</span>) <span class=\"hljs-comment\">// 不触发</span>\n    },\n  }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n</section></section><section><h1 id=\"3704777682\">计算属性可进行设置操作</h1><p>计算属性返回的如果是对象引用，那么，可通过次计算属性设置其成员值</p>\n</section><section><h1 id=\"4202073935\">keep-alive 缓存</h1><p><code>&lt;router-view&gt;&lt;/router-view&gt;</code> 也是支持的</p>\n<p>父组件的销毁同样会销毁 keep-alive 的子组件</p>\n</section><section><h1 id=\"1255288539\">mixin</h1><p><strong>mounted 不会覆盖</strong><br>mixins 中的 mounted 也会执行，并且先于组件 mounted 执行</p>\n<p><strong>methods 中的同名成员会覆盖</strong><br>以组件数据优先</p>\n</section><section><h1 id=\"3971168449\">slot</h1><p>例子涉及的特性</p>\n<ol>\n<li>动态具名插槽，也就是动态设置 name (不是动态插槽名)</li>\n<li>作用域插槽：prop 传值</li>\n</ol>\n<p>组件中 slot 定义</p>\n<pre><code class=\"language-vue\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slot</span> <span class=\"hljs-attr\">:name</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">:d</span>=<span class=\"hljs-string\">\"data\"</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  data() {\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'slotA'</span>,\n      <span class=\"hljs-attr\">data</span>: { <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'桃源'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'1'</span> },\n    }\n  },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n<p>使用</p>\n<pre><code class=\"language-vue\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">comp</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">v-slot:slotA</span>=<span class=\"hljs-string\">\"{ d }\"</span>&gt;</span> {{ d.label }}:{{ d.value }} <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">comp</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> comp <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./comp.vue'</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">components</span>: { comp },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n</section><section><h1 id=\"2803339297\">router-view 加 key</h1><p>实现不共用组件实例</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-view</span> <span class=\"hljs-attr\">:key</span>=<span class=\"hljs-string\">\"key\"</span> /&gt;</span></code></pre>\n</section><section><h1 id=\"2062739268\">组件直接渲染到 document 中</h1><pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> ToastComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./Toast.vue'</span>\n<span class=\"hljs-keyword\">const</span> Toast = Vue.extend(ToastComponent)\n<span class=\"hljs-keyword\">const</span> toast = <span class=\"hljs-keyword\">new</span> Toast().$mount()\n<span class=\"hljs-built_in\">document</span>.body.appendChild(toast.$el)\n\n<span class=\"hljs-comment\">// 2 支持给组件传参，绑定状态，但多了一个父组件</span>\n<span class=\"hljs-keyword\">import</span> AreaSelectorComp <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./AreaSelector.vue'</span>\n<span class=\"hljs-keyword\">const</span> areaSelector = <span class=\"hljs-keyword\">new</span> Vue({\n  render: <span class=\"hljs-function\">(<span class=\"hljs-params\">h</span>) =&gt;</span>\n    h(AreaSelectorComp, {\n      attrs: {\n        <span class=\"hljs-keyword\">get</span>: <span class=\"hljs-keyword\">this</span>.getRegionList,\n      },\n    }),\n}).$mount()\n<span class=\"hljs-built_in\">document</span>.body.appendChild(areaSelector.$el)</code></pre>\n</section><section><h1 id=\"3606520594\">改变 document 位置的组件销毁时不会被删除</h1><pre><code class=\"language-vue\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  mounted() {\n    <span class=\"hljs-comment\">// 改变文档位置后销毁不会被删除</span>\n    <span class=\"hljs-built_in\">document</span>.body.appendChild(<span class=\"hljs-keyword\">this</span>.$el)\n  },\n  destroyed() {\n    <span class=\"hljs-comment\">// 由于不会删除，所以在销毁后手动删除</span>\n    <span class=\"hljs-keyword\">this</span>.$el.remove()\n  },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n</section><section><h1 id=\"4219515659\">$scopedSlot 与 $slot 区别</h1><p>$slot：当前组件已加载的插槽</p>\n<p>$scopedSlot：获取当前组件声明的插槽</p>\n"})