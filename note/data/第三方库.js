window['cb_第三方库']({"outline":[{"id":"2878028564","level":1,"name":"ckedit4 富文本","children":[{"id":"3611351841","level":2,"name":"编写插件(或覆盖)","children":[]},{"id":"2380690262","level":2,"name":"在线构建 build-config.js 备份","children":[]}]},{"id":"665193390","level":1,"name":"ckedit5 富文本","children":[{"id":"3708765212","level":2,"name":"文本框编辑改变事件 - input","children":[]},{"id":"2626120458","level":2,"name":"使用示例","children":[]},{"id":"1437431145","level":2,"name":"展示端需要的 css","children":[]}]},{"id":"1642964692","level":1,"name":"sortablejs","children":[]},{"id":"140024770","level":1,"name":"汇总","children":[{"id":"1489870667","level":2,"name":"前端","children":[]},{"id":"3985802165","level":2,"name":"web 服务端","children":[]},{"id":"906234490","level":2,"name":"nodejs 桌面应用开发框架","children":[]},{"id":"674016472","level":2,"name":"技术发展相关概念","children":[]},{"id":"3864646848","level":2,"name":"博客建站 markdown 文档","children":[]},{"id":"742382700","level":2,"name":"汉字转拼音","children":[]},{"id":"1319211793","level":2,"name":"各种 js 数据驱动框架","children":[]},{"id":"889955005","level":2,"name":"ui 框架","children":[]},{"id":"1514144947","level":2,"name":"日期时间美化","children":[]},{"id":"3426105666","level":2,"name":"公式解决","children":[]},{"id":"3475586080","level":2,"name":"直播解决","children":[]},{"id":"3361461841","level":2,"name":"图片懒加载 lozad.js","children":[]}]}],"content":"<section><h1 id=\"2878028564\">ckedit4 富文本</h1><section><h2 id=\"3611351841\">编写插件(或覆盖)</h2><pre><code class=\"language-js\">CKEDITOR.plugins.add(<span class=\"hljs-string\">'cloudservices'</span>, {\n    <span class=\"hljs-attr\">requires</span>: <span class=\"hljs-string\">'filetools,ajax'</span>,\n    <span class=\"hljs-attr\">onLoad</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">var</span> FileLoader = CKEDITOR.fileTools.fileLoader;\n\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">CloudServicesLoader</span>(<span class=\"hljs-params\"> editor, fileOrData, fileName, token </span>) </span>{\n            FileLoader.call( <span class=\"hljs-keyword\">this</span>, editor, fileOrData, fileName );\n        }\n\n        CloudServicesLoader.prototype = CKEDITOR.tools.extend( {}, FileLoader.prototype );\n\n        CKEDITOR.plugins.cloudservices.cloudServicesLoader = CloudServicesLoader;\n    },\n});\n</code></pre>\n</section><section><h2 id=\"2380690262\">在线构建 build-config.js 备份</h2><pre><code class=\"language-js\"><span class=\"hljs-keyword\">var</span> CKBUILDER_CONFIG = {\n    <span class=\"hljs-attr\">skin</span>: <span class=\"hljs-string\">'moono-lisa'</span>,\n    <span class=\"hljs-comment\">// preset: 'basic',</span>\n    preset: <span class=\"hljs-string\">'full'</span>,\n    <span class=\"hljs-attr\">ignore</span>: [\n        <span class=\"hljs-string\">'.DS_Store'</span>,\n        <span class=\"hljs-string\">'.bender'</span>,\n        <span class=\"hljs-string\">'.editorconfig'</span>,\n        <span class=\"hljs-string\">'.gitattributes'</span>,\n        <span class=\"hljs-string\">'.gitignore'</span>,\n        <span class=\"hljs-string\">'.idea'</span>,\n        <span class=\"hljs-string\">'.jscsrc'</span>,\n        <span class=\"hljs-string\">'.jshintignore'</span>,\n        <span class=\"hljs-string\">'.jshintrc'</span>,\n        <span class=\"hljs-string\">'.mailmap'</span>,\n        <span class=\"hljs-string\">'.npm'</span>,\n        <span class=\"hljs-string\">'.travis.yml'</span>,\n        <span class=\"hljs-string\">'bender-err.log'</span>,\n        <span class=\"hljs-string\">'bender-out.log'</span>,\n        <span class=\"hljs-string\">'bender.ci.js'</span>,\n        <span class=\"hljs-string\">'bender.js'</span>,\n        <span class=\"hljs-string\">'dev'</span>,\n        <span class=\"hljs-string\">'gruntfile.js'</span>,\n        <span class=\"hljs-string\">'less'</span>,\n        <span class=\"hljs-string\">'node_modules'</span>,\n        <span class=\"hljs-string\">'package.json'</span>,\n        <span class=\"hljs-string\">'tests'</span>\n    ],\n    <span class=\"hljs-attr\">plugins</span> : {\n        <span class=\"hljs-comment\">// 'a11yhelp' : 1,</span>\n        <span class=\"hljs-comment\">// 'about' : 1,</span>\n        <span class=\"hljs-string\">'basicstyles'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'bidi'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'blockquote'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'clipboard'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'colorbutton'</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-comment\">// 字体颜色</span>\n        <span class=\"hljs-string\">'colordialog'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'contextmenu'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'copyformatting'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'dialogadvtab'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'div'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'elementspath'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'enterkey'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'entities'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'filebrowser' : 1, // 文件上传相关</span>\n        <span class=\"hljs-string\">'find'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'flash' : 1,</span>\n        <span class=\"hljs-string\">'floatingspace'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'font'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'format'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'forms' : 1,</span>\n        <span class=\"hljs-string\">'horizontalrule'</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-comment\">// 插入水平线</span>\n        <span class=\"hljs-string\">'htmlwriter'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'iframe'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'image'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'indentblock'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'indentlist'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'justify'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'language' : 1,</span>\n        <span class=\"hljs-string\">'link'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'list'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'liststyle'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'magicline'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'maximize' : 1, // 最大化窗口</span>\n        <span class=\"hljs-comment\">// 'newpage' : 1,</span>\n        <span class=\"hljs-string\">'pagebreak'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'pastefromword'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'pastetext'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'preview'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'print' : 1,</span>\n        <span class=\"hljs-string\">'removeformat'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'resize'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'save' : 1,</span>\n        <span class=\"hljs-comment\">// 'scayt' : 1, // 即时拼写检查</span>\n        <span class=\"hljs-string\">'selectall'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'showblocks'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'showborders'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'smiley'</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-comment\">// 表情</span>\n        <span class=\"hljs-string\">'sourcearea'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'specialchar'</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-comment\">// 特殊字符</span>\n        <span class=\"hljs-string\">'stylescombo'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'tab'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'table'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'tableselection'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'tabletools'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'templates' : 1,</span>\n        <span class=\"hljs-string\">'toolbar'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-string\">'undo'</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-comment\">// 'uploadimage' : 1,</span>\n        <span class=\"hljs-comment\">// 'wsc' : 1, // 拼写检查弹窗</span>\n        <span class=\"hljs-string\">'wysiwygarea'</span> : <span class=\"hljs-number\">1</span>\n    },\n    <span class=\"hljs-attr\">languages</span> : {\n        <span class=\"hljs-string\">'zh-cn'</span> : <span class=\"hljs-number\">1</span>\n    }\n};</code></pre>\n</section></section><section><h1 id=\"665193390\">ckedit5 富文本</h1><section><h2 id=\"3708765212\">文本框编辑改变事件 - input</h2><p>但复制黏贴不会触发，坑爹啊，只能用 change:data 了</p>\n<pre><code class=\"language-js\">editor.commands.get(<span class=\"hljs-string\">'input'</span>).on(<span class=\"hljs-string\">'execute'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">evt, args</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">this</span>.$emit(<span class=\"hljs-string\">'inputValue'</span>, editor.getData())\n})</code></pre>\n</section><section><h2 id=\"2626120458\">使用示例</h2><pre><code class=\"language-js\">ClassicEditor.create(this.<span class=\"hljs-variable\">$el</span>, {\n  fontSize: {\n    options: [12, <span class=\"hljs-string\">'default'</span>, 18, 20, 22],\n  },\n  // highlight: {\n  //   options: [\n  //     { model: <span class=\"hljs-string\">'yellowMarker'</span>, class: <span class=\"hljs-string\">'marker-yellow'</span>, title: <span class=\"hljs-string\">'Yellow Marker'</span>, color: <span class=\"hljs-string\">'var(--ck-highlight-marker-yellow)'</span>, <span class=\"hljs-built_in\">type</span>: <span class=\"hljs-string\">'marker'</span> },\n  //     { model: <span class=\"hljs-string\">'greenMarker'</span>, class: <span class=\"hljs-string\">'marker-green'</span>, title: <span class=\"hljs-string\">'Green marker'</span>, color: <span class=\"hljs-string\">'var(--ck-highlight-marker-green)'</span>, <span class=\"hljs-built_in\">type</span>: <span class=\"hljs-string\">'marker'</span> },\n  //     { model: <span class=\"hljs-string\">'pinkMarker'</span>, class: <span class=\"hljs-string\">'marker-pink'</span>, title: <span class=\"hljs-string\">'Pink marker'</span>, color: <span class=\"hljs-string\">'var(--ck-highlight-marker-pink)'</span>, <span class=\"hljs-built_in\">type</span>: <span class=\"hljs-string\">'marker'</span> },\n  //     { model: <span class=\"hljs-string\">'blueMarker'</span>, class: <span class=\"hljs-string\">'marker-blue'</span>, title: <span class=\"hljs-string\">'Blue marker'</span>, color: <span class=\"hljs-string\">'var(--ck-highlight-marker-blue)'</span>, <span class=\"hljs-built_in\">type</span>: <span class=\"hljs-string\">'marker'</span> },\n  //     { model: <span class=\"hljs-string\">'redPen'</span>, class: <span class=\"hljs-string\">'pen-red'</span>, title: <span class=\"hljs-string\">'Red pen'</span>, color: <span class=\"hljs-string\">'var(--ck-highlight-pen-red)'</span>, <span class=\"hljs-built_in\">type</span>: <span class=\"hljs-string\">'pen'</span> },\n  //     { model: <span class=\"hljs-string\">'greenPen'</span>, class: <span class=\"hljs-string\">'pen-green'</span>, title: <span class=\"hljs-string\">'Green pen'</span>, color: <span class=\"hljs-string\">'var(--ck-highlight-pen-green)'</span>, <span class=\"hljs-built_in\">type</span>: <span class=\"hljs-string\">'pen'</span> }\n  //   ]\n  // },\n  heading: {\n    options: [\n      { model: <span class=\"hljs-string\">'paragraph'</span>, title: <span class=\"hljs-string\">'Paragraph'</span>, class: <span class=\"hljs-string\">'ck-heading_paragraph'</span> },\n      { model: <span class=\"hljs-string\">'heading1'</span>, view: <span class=\"hljs-string\">'h1'</span>, title: <span class=\"hljs-string\">'Heading 1'</span>, class: <span class=\"hljs-string\">'ck-heading_heading1'</span> },\n      { model: <span class=\"hljs-string\">'heading2'</span>, view: <span class=\"hljs-string\">'h2'</span>, title: <span class=\"hljs-string\">'Heading 2'</span>, class: <span class=\"hljs-string\">'ck-heading_heading2'</span> },\n      { model: <span class=\"hljs-string\">'heading3'</span>, view: <span class=\"hljs-string\">'h3'</span>, title: <span class=\"hljs-string\">'Heading 3'</span>, class: <span class=\"hljs-string\">'ck-heading_heading3'</span> },\n      { model: <span class=\"hljs-string\">'heading4'</span>, view: <span class=\"hljs-string\">'h4'</span>, title: <span class=\"hljs-string\">'标题 4'</span>, class: <span class=\"hljs-string\">'ck-heading_heading4'</span> },\n      { model: <span class=\"hljs-string\">'heading5'</span>, view: <span class=\"hljs-string\">'h5'</span>, title: <span class=\"hljs-string\">'标题 5'</span>, class: <span class=\"hljs-string\">'ck-heading_heading5'</span> },\n      // {\n      //   model: <span class=\"hljs-string\">'headingFancy'</span>,\n      //   view: {\n      //     name: <span class=\"hljs-string\">'h2'</span>,\n      //     classes: <span class=\"hljs-string\">'fancy'</span>\n      //   },\n      //   title: <span class=\"hljs-string\">'Heading 2 (fancy)'</span>,\n      //   class: <span class=\"hljs-string\">'ck-heading_heading2_fancy'</span>,\n\n      //   // It needs to be converted before the standard <span class=\"hljs-string\">'heading2'</span>.\n      //   converterPriority: <span class=\"hljs-string\">'high'</span>\n      // }\n    ],\n  },\n  // toolbar: [ <span class=\"hljs-string\">'heading'</span>, <span class=\"hljs-string\">'|'</span>, <span class=\"hljs-string\">'bold'</span>, <span class=\"hljs-string\">'italic'</span>, <span class=\"hljs-string\">'link'</span>, <span class=\"hljs-string\">'bulletedList'</span>, <span class=\"hljs-string\">'numberedList'</span>, <span class=\"hljs-string\">'alignment'</span>, <span class=\"hljs-string\">'blockQuote'</span>, <span class=\"hljs-string\">'undo'</span>, <span class=\"hljs-string\">'redo'</span> ],\n  // language: <span class=\"hljs-string\">'zh-cn'</span>\n})\n  .<span class=\"hljs-keyword\">then</span>((editor) =&gt; {\n    this.editor = editor\n    editor.setData(this.value)\n\n    editor.model.document.on(<span class=\"hljs-string\">'change:data'</span>, () =&gt; {\n      // 主动设置情况 不触发 inputValue\n      <span class=\"hljs-keyword\">if</span> (this.autoset === <span class=\"hljs-literal\">true</span>) {\n        this.autoset = <span class=\"hljs-literal\">false</span>\n        <span class=\"hljs-built_in\">return</span>\n      }\n      this.<span class=\"hljs-variable\">$emit</span>(<span class=\"hljs-string\">'inputValue'</span>, editor.getData())\n    })\n    // 文本框编辑改变事件，但\n    // 复制黏贴不会触发，坑爹啊，只能用 change:data 了\n    // editor.commands.get(<span class=\"hljs-string\">'input'</span>).on(<span class=\"hljs-string\">'execute'</span>, (evt, args) =&gt; {\n    //   this.<span class=\"hljs-variable\">$emit</span>(<span class=\"hljs-string\">'inputValue'</span>, editor.getData())\n    // })\n  })\n  .catch((error) =&gt; {\n    console.error(error)\n  })</code></pre>\n</section><section><h2 id=\"1437431145\">展示端需要的 css</h2><p><a href=\"https://ckeditor.com/docs/ckeditor5/latest/builds/guides/integration/content-styles.html\">https://ckeditor.com/docs/ckeditor5/latest/builds/guides/integration/content-styles.html</a></p>\n</section></section><section><h1 id=\"1642964692\">sortablejs</h1><pre><code class=\"language-ts\">Sortable.create(el, {\n  <span class=\"hljs-attr\">group</span>: {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'FieldChoiceItem'</span>,\n    <span class=\"hljs-attr\">put</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">pull</span>: <span class=\"hljs-string\">'clone'</span>,\n  },\n  <span class=\"hljs-attr\">revertOnSpill</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// Enable plugin</span>\n\n  <span class=\"hljs-comment\">// animation: 150,</span>\n  sort: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">draggable</span>: <span class=\"hljs-string\">'.btn'</span>,\n\n  <span class=\"hljs-comment\">// ghostClass: 'sortable-ghost', // 给拖动元素增加 class</span>\n  setData: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">dataTransfer</span>) </span>{\n    <span class=\"hljs-comment\">// to avoid Firefox bug</span>\n    <span class=\"hljs-comment\">// Detail see : https://github.com/RubaXa/Sortable/issues/1012</span>\n    dataTransfer.setData(<span class=\"hljs-string\">'Text'</span>, <span class=\"hljs-string\">''</span>)\n  },\n\n  <span class=\"hljs-comment\">/**\n   * 点击拖动元素时触发\n   */</span>\n  choose(e) {},\n  <span class=\"hljs-comment\">/**\n   * 松开拖动元素触发\n   */</span>\n  onUnchoose(e) {},\n\n  <span class=\"hljs-comment\">/**\n   * 拖动结束触发\n   * 可进行数据交换\n   */</span>\n  onEnd: <span class=\"hljs-function\">(<span class=\"hljs-params\">evt</span>) =&gt;</span> {\n    <span class=\"hljs-comment\">// 交换数据</span>\n    <span class=\"hljs-comment\">// const targetRow = that.list.splice(evt.oldIndex, 1)[0]</span>\n    <span class=\"hljs-comment\">// that.list.splice(evt.newIndex, 0, targetRow)</span>\n  },\n  <span class=\"hljs-comment\">/**\n   * 拖动时改变前触发\n   */</span>\n  onMove(e) {\n    <span class=\"hljs-comment\">// 排除不拖动的元素</span>\n    <span class=\"hljs-comment\">// if (e.related.classList.contains('no-drag')) return false</span>\n  },\n  <span class=\"hljs-comment\">/**\n   * 拖动结束，容器列表发生新增触发。\n   * 此时数据是否以及改变？\n   */</span>\n  onAdd() {},\n  <span class=\"hljs-comment\">/**\n   * 拖动结束\n   * 并且已经更新数据后触发\n   */</span>\n  onUpdate: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-regexp\">/**Event*/</span> evt</span>) </span>{\n    <span class=\"hljs-comment\">// same properties as onEnd</span>\n  },\n  <span class=\"hljs-comment\">/**\n   * 列表元素发生改变后触发\n   * 比如新增删除交换\n   */</span>\n  onSort: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"><span class=\"hljs-regexp\">/**Event*/</span> evt</span>) </span>{\n    <span class=\"hljs-comment\">// same properties as onEnd</span>\n  },\n  <span class=\"hljs-comment\">/**\n   * 拖动开始，并且创建一个克隆元素时触发\n   */</span>\n  onClone(toolItem, ...arrs) {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'🚀 -- onClone -- toolItem:'</span>, toolItem)\n    <span class=\"hljs-comment\">// return Object.assign({}, toolItem);</span>\n\n    <span class=\"hljs-comment\">// return document.createElement('div');</span>\n  },\n})</code></pre>\n</section><section><h1 id=\"140024770\">汇总</h1><section><h2 id=\"1489870667\">前端</h2><p>pwd：google 力推的，完全的 web 方式</p>\n<p>weex</p>\n<p>rn：react native</p>\n<p><a href=\"https://github.com/highlightjs/highlight.js\">常用代码高亮 highlight</a></p>\n</section><section><h2 id=\"3985802165\">web 服务端</h2><p>eggjs</p>\n<p>koa</p>\n<p>express</p>\n</section><section><h2 id=\"906234490\">nodejs 桌面应用开发框架</h2><p><a href=\"https://electron.atom.io/\">electron</a></p>\n<p>nwjs</p>\n</section><section><h2 id=\"674016472\">技术发展相关概念</h2><p>后端普遍开始由<strong>巨石应用模式</strong>向<strong>微服务架构</strong>转变</p>\n<p><strong>serverless</strong> 无服务器计算，降低开发成本，缩短产品上线时间</p>\n</section><section><h2 id=\"3864646848\">博客建站 markdown 文档</h2><p><a href=\"https://www.gatsbyjs.org/\">https://www.gatsbyjs.org/</a></p>\n<p><a href=\"https://hexo.io/\">https://hexo.io/</a></p>\n<p><a href=\"https://vuepress.vuejs.org/zh/\">https://vuepress.vuejs.org/zh/</a></p>\n<p><a href=\"https://docsify.js.org/#/\">https://docsify.js.org/#/</a></p>\n</section><section><h2 id=\"742382700\">汉字转拼音</h2><p><a href=\"https://github.com/sxei/pinyinjs\">https://github.com/sxei/pinyinjs</a></p>\n</section><section><h2 id=\"1319211793\">各种 js 数据驱动框架</h2><ul>\n<li>reactjs</li>\n<li>vuejs</li>\n<li><a href=\"https://github.com/developit/preact\">Preact</a>：react 的轻量解决方案</li>\n</ul>\n</section><section><h2 id=\"889955005\">ui 框架</h2><p>reavt-native ui 库：React-Virgin</p>\n<p><a href=\"https://www.telerik.com/support/demos\">https://www.telerik.com/support/demos</a></p>\n<p><a href=\"https://myliang.github.io/fish-ui/#/components/menu\">https://myliang.github.io/fish-ui/#/components/menu</a></p>\n<p><a href=\"http://quasar-framework.org/quasar-play/android/index.html#/showcase/style-and-identity/color-palette\">http://quasar-framework.org/quasar-play/android/index.html#/showcase/style-and-identity/color-palette</a></p>\n</section><section><h2 id=\"1514144947\">日期时间美化</h2><p><a href=\"http://momentjs.com\">http://momentjs.com</a></p>\n</section><section><h2 id=\"3426105666\">公式解决</h2><p><a href=\"https://github.com/Khan/KaTeX\">https://github.com/Khan/KaTeX</a></p>\n<p><a href=\"https://github.com/mathjax/MathJax\">https://github.com/mathjax/MathJax</a></p>\n</section><section><h2 id=\"3475586080\">直播解决</h2><p><strong>腾讯直播 TcPlayer-2.2.1.js</strong></p>\n<p><a href=\"https://cloud.tencent.com/document/product/454/7503\">官方文档</a></p>\n<p><strong>hls.js</strong></p>\n<p><a href=\"https://github.com/video-dev/hls.js\">https://github.com/video-dev/hls.js</a></p>\n</section><section><h2 id=\"3361461841\">图片懒加载 lozad.js</h2><p><a href=\"https://github.com/ApoorvSaxena/lozad.js\">官方 github</a></p>\n<pre><code class=\"language-html\"><span class=\"hljs-comment\">&lt;!-- \nclass=\"lozad\" 要懒加载的图片加这个 class 值\ndata-src 目标图片\ndata-backup-src 目标图片失败后加载的图片\n --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span>\n  <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"lozad\"</span>\n  <span class=\"hljs-attr\">data-src</span>=<span class=\"hljs-string\">\"http://www.lwk-restful.com/images/2021/04/2021040110573979131.png\"</span>\n  <span class=\"hljs-attr\">data-backup-src</span>=<span class=\"hljs-string\">\"https://www.baidu.com/img/flexible/logo/pc/result2.png\"</span>\n/&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- 下面是必须项，加在 &lt;/body&gt; 前 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>\n  <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span>\n  <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js\"</span>\n&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n  lozad(<span class=\"hljs-string\">\".lozad\"</span>, {\n    loaded(img) {\n      img.onerror = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        img.onerror = <span class=\"hljs-literal\">null</span>;\n        img.src = img.dataset.backupSrc;\n      };\n    },\n  }).observe();\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n"})