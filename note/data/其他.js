window['cb_其他']({"outline":[{"id":"2343949674","level":1,"name":"easy-mock 接口使用","children":[{"id":"1972982623","level":2,"name":"webpack 代理 devServer.proxy 无法使用 easy-mock 问题解决","children":[]}]},{"id":"926466006","level":1,"name":"glob 路径匹配","children":[{"id":"4052398170","level":2,"name":"glob 介绍","children":[]},{"id":"1616539518","level":2,"name":"监听所有目录，所有文件","children":[]}]},{"id":"326359908","level":1,"name":"gzip ，服务端可配置压缩","children":[]},{"id":"1448683836","level":1,"name":"浏览器 url 打开桌面应用 - win系统","children":[]},{"id":"2088595827","level":1,"name":"浏览器缓存","children":[]},{"id":"2364316346","level":1,"name":"浏览器跨域解决","children":[{"id":"812788085","level":2,"name":"jsonp","children":[]},{"id":"1105305485","level":2,"name":"domain","children":[]},{"id":"642311767","level":2,"name":"h5 ajax 跨域，白名单机制","children":[{"id":"2612554900","level":3,"name":"服务端设置例子","children":[]},{"id":"469860650","level":3,"name":"多个域名需特殊处理","children":[]},{"id":"4207820383","level":3,"name":".net","children":[]}]},{"id":"1339025983","level":2,"name":"postMessage","children":[]}]},{"id":"3382146487","level":1,"name":"版本-知识点","children":[]},{"id":"3389169246","level":1,"name":"移动端兼容问题解决","children":[{"id":"2259864829","level":2,"name":"ios 移动端 click 300ms 延迟解决","children":[]},{"id":"1984356602","level":2,"name":"ios 移动端 css 伪类 :active 无效","children":[]},{"id":"2627550086","level":2,"name":"ios 去掉点击阴影","children":[]},{"id":"1313915569","level":2,"name":"android webview 初始body 为0 问题","children":[]},{"id":"3409211945","level":2,"name":"android webview 界面残留，界面闪烁","children":[]},{"id":"4249151999","level":2,"name":"打电话","children":[]},{"id":"304209687","level":2,"name":"qq 7.2 内置浏览器，focus 不弹键盘(模拟click)","children":[]},{"id":"3330790495","level":2,"name":"部分 Android 机 window.innerWidth 延迟","children":[]}]}],"content":"<section><h1 id=\"2343949674\">easy-mock 接口使用</h1><section><h2 id=\"1972982623\">webpack 代理 devServer.proxy 无法使用 easy-mock 问题解决</h2><p>手动增加可访问的 cookie、host 请求头信息</p>\n<pre><code class=\"language-js\">devServer: {\n  <span class=\"hljs-attr\">contentBase</span>: path.resolve(__dirname, <span class=\"hljs-string\">'dist'</span>),\n  <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">'192.168.1.222'</span>,\n  <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3001</span>,\n  <span class=\"hljs-attr\">inline</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">hot</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">hotOnly</span>: <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">proxy</span>: {\n    <span class=\"hljs-string\">\"/Publisher\"</span>: {\n      <span class=\"hljs-attr\">target</span>: <span class=\"hljs-string\">\"http://www.easy-mock.com/mock/59c46dbfe0dc663341b4084a/example\"</span>,\n\n      <span class=\"hljs-attr\">onProxyRes</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">proxyRes, req, res</span>)</span>{\n      },\n      <span class=\"hljs-attr\">onProxyReq</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">proxyReq, req, res</span>)</span>{\n        proxyReq.setHeader(<span class=\"hljs-string\">'Cookie'</span>,<span class=\"hljs-string\">'Cookie:easy-mock_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI1OWM0NmRiZmUwZGM2NjMzNDFiNDA4NTIiLCJleHAiOjE1MDcyNTQ5NzUsImlkIjoiNTljNDZkYmZlMGRjNjYzMzQxYjQwODQ5IiwiaWF0IjoxNTA2MDQ1Mzc1fQ.45-Ow-W-lcq1oxIn-japLDd95lSAZMnnBuaCDhTZULA'</span>)\n        proxyReq.setHeader(<span class=\"hljs-string\">'Host'</span>,<span class=\"hljs-string\">'www.easy-mock.com'</span>)\n      }\n    }\n  }\n}</code></pre>\n</section></section><section><h1 id=\"926466006\">glob 路径匹配</h1><section><h2 id=\"4052398170\">glob 介绍</h2><p><a href=\"https://github.com/isaacs/node-glob\">英文</a></p>\n<p><a href=\"http://www.jianshu.com/p/ce7cf53274bb\">中文</a></p>\n</section><section><h2 id=\"1616539518\">监听所有目录，所有文件</h2><p>&#39;./src/**&#39;</p>\n</section></section><section><h1 id=\"326359908\">gzip ，服务端可配置压缩</h1><p><a href=\"https://betterexplained.com/articles/how-to-optimize-your-site-with-gzip-compression/\">https://betterexplained.com/articles/how-to-optimize-your-site-with-gzip-compression/</a></p>\n<p>浏览器会自动解压缩  </p>\n<p>js，css 一般被压缩。html 文件不压缩</p>\n</section><section><h1 id=\"1448683836\">浏览器 url 打开桌面应用 - win系统</h1><p>注册表文件 - 教学易.reg</p>\n<pre><code><span class=\"hljs-selector-tag\">Windows</span> <span class=\"hljs-selector-tag\">Registry</span> <span class=\"hljs-selector-tag\">Editor</span> <span class=\"hljs-selector-tag\">Version</span> 5<span class=\"hljs-selector-class\">.00</span> \n<span class=\"hljs-selector-attr\">[HKEY_CLASSES_ROOT\\eclassedu]</span>\n@=\"\"\n<span class=\"hljs-string\">\"URL Protocol\"</span>=<span class=\"hljs-string\">\"\"</span>\n\n[HKEY_CLASSES_ROOT\\eclassedu\\DefaultIcon]\n@=<span class=\"hljs-string\">\"\"</span>\n\n[HKEY_CLASSES_ROOT\\eclassedu\\Shell]\n\n[HKEY_CLASSES_ROOT\\eclassedu\\Shell\\open]\n\n[HKEY_CLASSES_ROOT\\eclassedu\\Shell\\open\\command]\n@=<span class=\"hljs-string\">\"\\\"D:\\\\Program Files (x86)\\\\教学易\\\\Eclassedu.exe\\\"\"</span></code></pre></section><section><h1 id=\"2088595827\">浏览器缓存</h1><p>Js css文件即使更改，也将优先使用缓存。</p>\n<p>发现Html文件每次请求都没使用缓存</p>\n</section><section><h1 id=\"2364316346\">浏览器跨域解决</h1><section><h2 id=\"812788085\">jsonp</h2><p>原理：通过 scrpt 标签执行js</p>\n</section><section><h2 id=\"1105305485\">domain</h2><p>仅限于同一主域名情况</p>\n<p>比如 \none.web.com、two.web.com，互相交互的页面设置为：<code>document.domain = &#39;web.com&#39;。</code>\n便能跨域通讯，包括 ajax、iframe之间</p>\n</section><section><h2 id=\"642311767\">h5 ajax 跨域，白名单机制</h2><section><h3 id=\"2612554900\">服务端设置例子</h3><p>PHP</p>\n<pre><code class=\"language-php\">&lt;?php header(<span class=\"hljs-string\">\"Access-Control-Allow-Origin:*\"</span>); <span class=\"hljs-comment\">// 所有</span>\n\n&lt;?php header(<span class=\"hljs-string\">\"Access-Control-Allow-Origin:https://www.google.com\"</span>); <span class=\"hljs-comment\">// 单个</span></code></pre>\n</section><section><h3 id=\"469860650\">多个域名需特殊处理</h3><p>语法不支持多个，所以需特殊处理</p>\n<pre><code>app.all(<span class=\"hljs-string\">'*'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n    <span class=\"hljs-keyword\">if</span>( req.headers.origin == <span class=\"hljs-string\">'https://www.google.com'</span> || req.headers.origin == <span class=\"hljs-string\">'https://www.baidu.com'</span> ){\n        res.header(<span class=\"hljs-string\">\"Access-Control-Allow-Origin\"</span>, req.headers.origin);\n        res.header(<span class=\"hljs-string\">'Access-Control-Allow-Methods'</span>, <span class=\"hljs-string\">'POST, GET'</span>);\n        res.header(<span class=\"hljs-string\">'Access-Control-Allow-Headers'</span>, <span class=\"hljs-string\">'X-Requested-With'</span>);\n        res.header(<span class=\"hljs-string\">'Access-Control-Allow-Headers'</span>, <span class=\"hljs-string\">'Content-Type'</span>);\n    }\n    next();\n});\n</code></pre></section><section><h3 id=\"4207820383\">.net</h3><p>1、直接在iis中的HTTP响应标头中增加</p>\n<p>2、或者web.config中，见下</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">system.webServer</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">httpProtocol</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">customHeaders</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">add</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Access-Control-Allow-Origin\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"*\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">customHeaders</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">httpProtocol</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">system.webServer</span>&gt;</span></code></pre>\n<p>3 、</p>\n<pre><code><span class=\"hljs-selector-tag\">HttpContext</span><span class=\"hljs-selector-class\">.Current</span><span class=\"hljs-selector-class\">.Response</span><span class=\"hljs-selector-class\">.AddHeader</span>(\"<span class=\"hljs-selector-tag\">Access-Control-Allow-Origin</span>\", \"*\");</code></pre></section></section><section><h2 id=\"1339025983\">postMessage</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage\">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage</a></p>\n<pre><code class=\"language-js\"><span class=\"hljs-comment\">// 监听</span>\n<span class=\"hljs-built_in\">window</span>.addEventListener(<span class=\"hljs-string\">'message'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">event</span>) </span>{\n    <span class=\"hljs-keyword\">if</span> (event.data === <span class=\"hljs-string\">'MessageTypeName'</span>) {\n    }\n})\n\n<span class=\"hljs-comment\">// 触发（此处为页面中的 iframe 中触发）</span>\n<span class=\"hljs-built_in\">window</span>.parent.postMessage(<span class=\"hljs-string\">'MessageTypeName'</span>, <span class=\"hljs-string\">'*'</span>)</code></pre>\n<p>兼容性：</p>\n<p>ie8+ 支持<br>ie67 使用Flash LocalConnection<br>ie8、ie9 需使用 XDomainRequest 创建ajax对象才能使用 postMessage</p>\n</section></section><section><h1 id=\"3382146487\">版本-知识点</h1><ul>\n<li>举例</li>\n</ul>\n<p>v2.0.0-alpha.8<br>v15.0.0-beta.6<br>v15.0.0-rc.2  </p>\n<p><strong>前三种数字解释：</strong></p>\n<ul>\n<li>主版本号 重大更新</li>\n<li>子版本号 新增功能</li>\n<li>修正版本号 bug修复</li>\n</ul>\n<p><strong>减号后面：</strong></p>\n<blockquote>\n<p>广义上对测试有三个传统的称呼：alpha、beta、gamma(rc)，用来标识测试的阶段和范围。</p>\n<p>alpha 是指内测，即现在说的CB，指开发团队内部测试的版本或者有限用户体验测试版本。</p>\n<p>beta 是指公测，即针对所有用户公开的测试版本。</p>\n<p>gamma 是指正式发布候选版，即现在说的 RC（Release Candidate）。是 beta 之后的版本，一般指是对 beta 做过一些修改</p>\n<p>-- 摘自百度百科</p>\n</blockquote>\n</section><section><h1 id=\"3389169246\">移动端兼容问题解决</h1><section><h2 id=\"2259864829\">ios 移动端 click 300ms 延迟解决</h2><p>文本框点击获焦也会出现延迟</p>\n<p><strong>解决：</strong></p>\n<p>head 中添加如下代码即可</p>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width,initial-scale=1,user-scalable=no\"</span>/&gt;</span></code></pre>\n<p>强调，必须带有<code>width=device-width</code><br>此方式也会禁止双击放大。是双击，非双指</p>\n<p>当前测试系统为ios10，由于条件问题，其他低版本系统未测</p>\n<p>qq 浏览器依旧有延迟，微信浏览器没问题</p>\n</section><section><h2 id=\"1984356602\">ios 移动端 css 伪类 :active 无效</h2><p>解决：</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">if</span>(isMobileIOS){\n  <span class=\"hljs-built_in\">document</span>.body.ontouchstart=<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{ };\n}</code></pre>\n<p>或者</p>\n<pre><code class=\"language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">ontouchstart</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span></code></pre>\n</section><section><h2 id=\"2627550086\">ios 去掉点击阴影</h2><p>a标签的href，或者给元素绑定click，Android ios 会有阴影。可通过如下方式去掉</p>\n<p>给 body 设置即可</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">-webkit-tap-highlight-color</span>:transparent;\n}</code></pre>\n</section><section><h2 id=\"1313915569\">android webview 初始body 为0 问题</h2></section><section><h2 id=\"3409211945\">android webview 界面残留，界面闪烁</h2><p>关闭硬件加速</p>\n</section><section><h2 id=\"4249151999\">打电话</h2><pre><code class=\"language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"tel:13670026449\"</span>&gt;</span>客服热线<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span></code></pre>\n<p>android 支持。ios 微信网页也支持，其他未测</p>\n<p><a href=\"http://www.cnblogs.com/softwarelanguagebs/p/5490837.html\">Android网页中tel等协议参考</a></p>\n<p><a href=\"http://lucaslz.com/2016/08/24/tips/callphone-sendmessage-composeemail/\">ios 参考</a></p>\n</section><section><h2 id=\"304209687\">qq 7.2 内置浏览器，focus 不弹键盘(模拟click)</h2><p>使用内置 click，没有此问题，但会延迟 300ms</p>\n<p>qq 浏览器，初始执行 focus 获焦情况(此时不会弹键盘，移动端都不会)，再次通过点击事件(非输入框)然后执行 focus，依然不会弹键盘，其他浏览器没有问题。</p>\n<p>解决：先 blur 失焦，后获 focus 焦点。终极解决办法，自己写键盘</p>\n</section><section><h2 id=\"3330790495\">部分 Android 机 window.innerWidth 延迟</h2><p><strong>问题：</strong><br>实现 rem 适配，初始需获取 window.innerWidth 宽度偏大。猜测是 meta name=&quot;viewport&quot; 延迟生效了</p>\n<p><strong>解决：</strong>\n使用 <code>window.screen.width</code> 屏幕宽度代替</p>\n"})