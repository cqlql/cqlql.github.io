window['cb_nginx']({"outline":[{"id":"2055225833","level":1,"name":"安装","children":[{"id":"130525584","level":2,"name":"1.使用 apt 安装","children":[]},{"id":"3349439453","level":2,"name":"2.编译安装","children":[{"id":"1372193913","level":3,"name":"下载","children":[]},{"id":"1186920147","level":3,"name":"编译安装","children":[]},{"id":"3307340513","level":3,"name":"依赖库 zlib, pcre, openssl","children":[]},{"id":"2488603098","level":3,"name":"可能需要","children":[]}]}]},{"id":"577564557","level":1,"name":"配置","children":[]},{"id":"3895327634","level":1,"name":"process 命令","children":[]},{"id":"1917933887","level":1,"name":"多个 location 指向不同的本地目录","children":[]},{"id":"3118854358","level":1,"name":"将所有请求指向同一个页面","children":[]},{"id":"1697586479","level":1,"name":"nginx.confg","children":[]},{"id":"1047614135","level":1,"name":"参考文档","children":[]}],"content":"<!-- @import \"[TOC]\" {cmd=\"toc\" depthFrom=1 depthTo=6 orderedList=false} -->\n\n<!-- code_chunk_output -->\n\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85\">安装</a><ul>\n<li><a href=\"#1%E4%BD%BF%E7%94%A8-apt-%E5%AE%89%E8%A3%85\">1.使用 apt 安装</a></li>\n<li><a href=\"#2%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85\">2.编译安装</a><ul>\n<li><a href=\"#%E4%B8%8B%E8%BD%BD\">下载</a></li>\n<li><a href=\"#%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85\">编译安装</a></li>\n<li><a href=\"#%E4%BE%9D%E8%B5%96%E5%BA%93-zlib-pcre-openssl\">依赖库 zlib, pcre, openssl</a></li>\n<li><a href=\"#%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81\">可能需要</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E9%85%8D%E7%BD%AE\">配置</a></li>\n<li><a href=\"#process-%E5%91%BD%E4%BB%A4\">process 命令</a></li>\n<li><a href=\"#%E5%A4%9A%E4%B8%AA-location-%E6%8C%87%E5%90%91%E4%B8%8D%E5%90%8C%E7%9A%84%E6%9C%AC%E5%9C%B0%E7%9B%AE%E5%BD%95\">多个 location 指向不同的本地目录</a></li>\n<li><a href=\"#%E5%B0%86%E6%89%80%E6%9C%89%E8%AF%B7%E6%B1%82%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2\">将所有请求指向同一个页面</a></li>\n<li><a href=\"#nginxconfg\">nginx.confg</a></li>\n<li><a href=\"#%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3\">参考文档</a></li>\n</ul>\n<!-- /code_chunk_output -->\n\n<section><h1 id=\"2055225833\">安装</h1><section><h2 id=\"130525584\">1.使用 apt 安装</h2><pre><code class=\"language-bash\"><span class=\"hljs-comment\"># 查看 nginx 相关包</span>\n<span class=\"hljs-attribute\">sudo</span> apt search nginx\n\n<span class=\"hljs-comment\"># 安装</span>\nsudo apt install nginx</code></pre>\n</section><section><h2 id=\"3349439453\">2.编译安装</h2><section><h3 id=\"1372193913\">下载</h3><p><a href=\"https://nginx.org/en/download.html\">从官网拿最新的下载地址</a></p>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\"># 下载</span>\n<span class=\"hljs-attribute\">wget</span> https://nginx.org/download/nginx-1.14.2.tar.gz\n<span class=\"hljs-comment\"># 解压缩</span>\ntar -xzvf nginx-<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">2</span>.tar.gz\n<span class=\"hljs-comment\"># 重命名</span>\nmv nginx-<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">14</span>.<span class=\"hljs-number\">2</span> nginx</code></pre>\n</section><section><h3 id=\"1186920147\">编译安装</h3><pre><code class=\"language-sh\"># 配置（这条命令在解压后的Nginx目录下执行，/usr/local/nginx 为安装路径）(可能需要安装 gcc)\nsudo ./configure --user=www --group=www --prefix=<span class=\"hljs-regexp\">/usr/</span>local/nginx --<span class=\"hljs-keyword\">with</span>-http_stub_status_module --<span class=\"hljs-keyword\">with</span>-http_ssl_module --<span class=\"hljs-keyword\">with</span>-http_realip_module\n# 编译 (可能需要安装 make)\nsudo make\n# 安装\nsudo make install</code></pre>\n</section><section><h3 id=\"3307340513\">依赖库 zlib, pcre, openssl</h3><p><a href=\"https://blog.csdn.net/z920954494/article/details/52132125\">ubuntu 下安装 nginx 时依赖库 zlib，pcre，openssl 安装方法</a></p>\n<p>http_rewrite_module 需要 PCRE library</p>\n<pre><code class=\"language-sh\">sudo apt-<span class=\"hljs-keyword\">get</span> install libpcre3 libpcre3-dev</code></pre>\n<p>http_ssl_module 需要 OpenSSL library</p>\n<pre><code class=\"language-sh\">sudo apt-<span class=\"hljs-keyword\">get</span> install openssl libssl-dev</code></pre>\n</section><section><h3 id=\"2488603098\">可能需要</h3><p>安装编译工具</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\"># 安装 gcc，编译器</span>\n<span class=\"hljs-attribute\">sudo</span> apt install gcc\n<span class=\"hljs-comment\"># 安装 make，编译执行</span>\nsudo apt install make</code></pre>\n<p>新建用户和用户组</p>\n<pre><code class=\"language-sh\">/usr/sbin/groupadd -f www\n/usr/sbin/useradd -g www www</code></pre>\n</section></section></section><section><h1 id=\"577564557\">配置</h1><p>配置文件位置，输入如下命令，找到关键字 <code>--conf-path</code></p>\n<pre><code class=\"language-bash\"><span class=\"hljs-attribute\">sudo</span> nginx -V</code></pre>\n<p>测试配置文件是否正确</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-attribute\">sudo</span> nginx -t</code></pre>\n</section><section><h1 id=\"3895327634\">process 命令</h1><pre><code class=\"language-bash\"><span class=\"hljs-comment\"># 停止</span>\n<span class=\"hljs-attribute\">sudo</span> nginx -s stop\n<span class=\"hljs-comment\"># 重启</span>\nsudo nginx -s reload</code></pre>\n<p><a href=\"https://nginx.org/en/docs/switches.html\">参考文档</a></p>\n</section><section><h1 id=\"1917933887\">多个 location 指向不同的本地目录</h1><p>一个 server 中配置多个 location 指向不同的本地目录</p>\n<p>参考文档：<a href=\"http://daimin.github.io/posts/Nginx-zhong-yi-ge-server-pei-zhi-duo-ge.html\">Nginx 中一个 server 配置多个 location | 茶瓯葱丝</a></p>\n<pre><code class=\"language-nginxconf\"><span class=\"hljs-attribute\">location</span> / {\n    <span class=\"hljs-attribute\">root</span>   E:/github/my-note-build/dist;\n    <span class=\"hljs-attribute\">index</span>  index.html index.htm;\n}\n<span class=\"hljs-comment\"># 其他目录需使用别名</span>\n<span class=\"hljs-attribute\">location</span> /docs {\n    <span class=\"hljs-attribute\">alias</span>   D:/_work/oa-mobile/projects/_docs/dist;\n    <span class=\"hljs-attribute\">index</span>  index.html index.htm;\n}</code></pre>\n</section><section><h1 id=\"3118854358\">将所有请求指向同一个页面</h1><pre><code class=\"language-nginxconf\"><span class=\"hljs-comment\"># 方式 1，通过 try_files</span>\n<span class=\"hljs-attribute\">location</span> / {\n    <span class=\"hljs-attribute\">root</span>   E:/github/my-note-build/dist;\n    <span class=\"hljs-attribute\">try_files</span> <span class=\"hljs-variable\">$uri</span> <span class=\"hljs-variable\">$uri</span>/ /index.html;\n}\n\n<span class=\"hljs-comment\"># 方式 2，通过重定向 404</span>\n<span class=\"hljs-attribute\">error_page</span> <span class=\"hljs-number\">404</span> =<span class=\"hljs-number\">200</span> /index.html;\n\n<span class=\"hljs-comment\"># 只处理子路径的所有请求</span>\n<span class=\"hljs-attribute\">location</span> /a4 {\n    <span class=\"hljs-attribute\">alias</span> /home/wwwroot/v2;\n    <span class=\"hljs-attribute\">index</span>  index.html;\n    <span class=\"hljs-attribute\">try_files</span> <span class=\"hljs-variable\">$uri</span> <span class=\"hljs-variable\">$uri</span>/ /a4/index.html;\n}</code></pre>\n</section><section><h1 id=\"1697586479\">nginx.confg</h1><p>位置：nginx/conf/nginx.conf</p>\n<p><a href=\"https://www.cnblogs.com/netsa/p/6383094.html\">nginx 常见正则匹配符号表示</a></p>\n<ul>\n<li>~ 为区分大小写匹配</li>\n<li>~* 为不区分大小写匹配</li>\n<li>!<del>和!</del>*分别为区分大小写不匹配及不区分大小写不匹配</li>\n</ul>\n<pre><code class=\"language-nginxconf\">\n<span class=\"hljs-attribute\">user</span>  www www;\n<span class=\"hljs-attribute\">worker_processes</span>  <span class=\"hljs-number\">1</span>;\n\n<span class=\"hljs-comment\">#error_log  logs/error.log;</span>\n<span class=\"hljs-comment\">#error_log  logs/error.log  notice;</span>\n<span class=\"hljs-comment\">#error_log  logs/error.log  info;</span>\n\n<span class=\"hljs-comment\">#pid        logs/nginx.pid;</span>\n\n\n<span class=\"hljs-section\">events</span> {\n    <span class=\"hljs-attribute\">worker_connections</span>  <span class=\"hljs-number\">1024</span>;\n}\n\n\n<span class=\"hljs-section\">http</span> {\n    <span class=\"hljs-comment\"># 设置mime类型，类型由mime.type文件定义</span>\n    <span class=\"hljs-attribute\">include</span>       mime.types;\n    <span class=\"hljs-attribute\">default_type</span>  application/octet-stream;\n\n    <span class=\"hljs-comment\"># 设定日志格式</span>\n    <span class=\"hljs-comment\">#log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '</span>\n    <span class=\"hljs-comment\">#                  '$status $body_bytes_sent \"$http_referer\" '</span>\n    <span class=\"hljs-comment\">#                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';</span>\n\n    <span class=\"hljs-comment\">#access_log  logs/access.log  main;</span>\n\n    <span class=\"hljs-comment\"># sendfile指令指定Nginx是否调用sendfile函数（zero copy方式）来输出文件，对于普通应用，必须设定为on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的uptime</span>\n    <span class=\"hljs-attribute\">sendfile</span>        <span class=\"hljs-literal\">on</span>;\n    <span class=\"hljs-comment\">#tcp_nopush     on;</span>\n\n    <span class=\"hljs-comment\"># 设置超时时间</span>\n    <span class=\"hljs-comment\">#keepalive_timeout  0;</span>\n    <span class=\"hljs-attribute\">keepalive_timeout</span>  <span class=\"hljs-number\">65</span>;\n\n    <span class=\"hljs-attribute\">gzip</span>  <span class=\"hljs-literal\">on</span>; <span class=\"hljs-comment\"># 开启gzip压缩</span>\n\n    <span class=\"hljs-section\">server</span> {\n        <span class=\"hljs-attribute\">listen</span>       <span class=\"hljs-number\">80</span>;  <span class=\"hljs-comment\"># Nginx的监听端口</span>\n        <span class=\"hljs-attribute\">server_name</span>  localhost;  <span class=\"hljs-comment\"># 访问Nginx服务器的域名</span>\n\n        <span class=\"hljs-comment\"># 编码设置</span>\n        <span class=\"hljs-comment\">#charset koi8-r;</span>\n\n        <span class=\"hljs-comment\"># 设定虚拟主机的访问日志</span>\n        <span class=\"hljs-comment\">#access_log  logs/host.access.log  main;</span>\n\n        <span class=\"hljs-attribute\">location</span> / {\n            <span class=\"hljs-attribute\">root</span>   html; <span class=\"hljs-comment\"># 前端项目入口文件的路径</span>\n            <span class=\"hljs-attribute\">index</span>  index.html index.htm; <span class=\"hljs-comment\"># 前端入口文件为index.html</span>\n        }\n\n        <span class=\"hljs-attribute\">location</span> /api {  <span class=\"hljs-comment\"># 凡是以/api开头的http请求都会被下面的服务器处理</span>\n            <span class=\"hljs-attribute\">proxy_pass</span>  https://127.0.0.1:3000;  <span class=\"hljs-comment\"># 被代理的服务器的域名</span>\n            <span class=\"hljs-comment\">#proxy_redirect     off;</span>\n            <span class=\"hljs-comment\">#proxy_set_header   Host             $host; // 很多时候开启这个代理反而失败</span>\n            <span class=\"hljs-comment\">#proxy_set_header   X-Real-IP        $remote_addr;</span>\n            <span class=\"hljs-comment\">#proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</span>\n        }\n\n        <span class=\"hljs-comment\"># 静态文件交给Nginx直接处理</span>\n        <span class=\"hljs-comment\">#location ~* ^.+\\.(css|js|txt|swf|mp4)$ {</span>\n        <span class=\"hljs-comment\">#location ~ /public { # 这样应该更好 /public 下是所有的静态资源</span>\n        <span class=\"hljs-comment\">#    root E:/web/public; # 注意，不能是反斜杠(\\)</span>\n        <span class=\"hljs-comment\">#    access_log off;</span>\n        <span class=\"hljs-comment\">#    expires 24h;</span>\n        <span class=\"hljs-comment\">#}</span>\n\n        <span class=\"hljs-attribute\">error_page</span>  <span class=\"hljs-number\">404</span>              /<span class=\"hljs-number\">404</span>.html;\n\n        <span class=\"hljs-comment\"># redirect server error pages to the static page /50x.html</span>\n        <span class=\"hljs-comment\">#</span>\n        <span class=\"hljs-attribute\">error_page</span>   <span class=\"hljs-number\">500</span> <span class=\"hljs-number\">502</span> <span class=\"hljs-number\">503</span> <span class=\"hljs-number\">504</span>  /50x.html;\n        <span class=\"hljs-attribute\">location</span> = /50x.html {\n            <span class=\"hljs-attribute\">root</span>   html;\n        }\n\n        <span class=\"hljs-comment\"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span>\n        <span class=\"hljs-comment\">#</span>\n        <span class=\"hljs-comment\">#location ~ \\.php$ {</span>\n        <span class=\"hljs-comment\">#    proxy_pass   http://127.0.0.1;</span>\n        <span class=\"hljs-comment\">#}</span>\n\n        <span class=\"hljs-comment\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span>\n        <span class=\"hljs-comment\">#</span>\n        <span class=\"hljs-comment\">#location ~ \\.php$ {</span>\n        <span class=\"hljs-comment\">#    root           html;</span>\n        <span class=\"hljs-comment\">#    fastcgi_pass   127.0.0.1:9000;</span>\n        <span class=\"hljs-comment\">#    fastcgi_index  index.php;</span>\n        <span class=\"hljs-comment\">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span>\n        <span class=\"hljs-comment\">#    include        fastcgi_params;</span>\n        <span class=\"hljs-comment\">#}</span>\n\n        <span class=\"hljs-comment\"># deny access to .htaccess files, if Apache's document root</span>\n        <span class=\"hljs-comment\"># concurs with nginx's one</span>\n        <span class=\"hljs-comment\">#</span>\n        <span class=\"hljs-comment\">#location ~ /\\.ht {</span>\n        <span class=\"hljs-comment\">#    deny  all;</span>\n        <span class=\"hljs-comment\">#}</span>\n    }\n\n    <span class=\"hljs-comment\"># 多个server，可实现同一个端口，多个域名</span>\n    <span class=\"hljs-comment\">#server {</span>\n    <span class=\"hljs-comment\">#    listen       80;</span>\n    <span class=\"hljs-comment\">#    #域名</span>\n    <span class=\"hljs-comment\">#    server_name  blog.huruji3.com;</span>\n    <span class=\"hljs-comment\">#    location / {</span>\n    <span class=\"hljs-comment\">#        #node.js应用的端口</span>\n    <span class=\"hljs-comment\">#        proxy_pass http://127.0.0.1:3001;</span>\n    <span class=\"hljs-comment\">#        root blog;</span>\n    <span class=\"hljs-comment\">#    }</span>\n    <span class=\"hljs-comment\">#}</span>\n\n    <span class=\"hljs-comment\"># another virtual host using mix of IP-, name-, and port-based configuration</span>\n    <span class=\"hljs-comment\">#</span>\n    <span class=\"hljs-comment\">#server {</span>\n    <span class=\"hljs-comment\">#    listen       8000;</span>\n    <span class=\"hljs-comment\">#    listen       somename:8080;</span>\n    <span class=\"hljs-comment\">#    server_name  somename  alias  another.alias;</span>\n\n    <span class=\"hljs-comment\">#    location / {</span>\n    <span class=\"hljs-comment\">#        root   html;</span>\n    <span class=\"hljs-comment\">#        index  index.html index.htm;</span>\n    <span class=\"hljs-comment\">#    }</span>\n    <span class=\"hljs-comment\">#}</span>\n\n\n    <span class=\"hljs-comment\"># HTTPS server</span>\n    <span class=\"hljs-comment\">#</span>\n    <span class=\"hljs-comment\">#server {</span>\n    <span class=\"hljs-comment\">#    listen       443 ssl;</span>\n    <span class=\"hljs-comment\">#    server_name  localhost;</span>\n\n    <span class=\"hljs-comment\">#    ssl_certificate      cert.pem;</span>\n    <span class=\"hljs-comment\">#    ssl_certificate_key  cert.key;</span>\n\n    <span class=\"hljs-comment\">#    ssl_session_cache    shared:SSL:1m;</span>\n    <span class=\"hljs-comment\">#    ssl_session_timeout  5m;</span>\n\n    <span class=\"hljs-comment\">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span>\n    <span class=\"hljs-comment\">#    ssl_prefer_server_ciphers  on;</span>\n\n    <span class=\"hljs-comment\">#    location / {</span>\n    <span class=\"hljs-comment\">#        root   html;</span>\n    <span class=\"hljs-comment\">#        index  index.html index.htm;</span>\n    <span class=\"hljs-comment\">#    }</span>\n    <span class=\"hljs-comment\">#}</span>\n\n}\n</code></pre>\n</section><section><h1 id=\"1047614135\">参考文档</h1><p><a href=\"https://blog.csdn.net/niceliusir/article/details/81048373\">Ubuntu Server 16.04.1 LTS 64 位安装 Nginx 以及简单应用</a></p>\n<p><a href=\"https://nginx.org/en/docs/configure.html\">二进制安装官方配置文档</a></p>\n<p><a href=\"https://www.qdskill.com/information/8426.html\">Nginx 与前端开发</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s/wecUdGnuHdZOs3t7zc16jw\">前端必备！最全 nginx 技术分析 - 前端之巅</a></p>\n"})