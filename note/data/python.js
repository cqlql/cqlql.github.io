window['cb_python']({"outline":[{"id":"906736967","level":1,"name":"flask copy","children":[{"id":"940257217","level":2,"name":"安装","children":[]},{"id":"2742829989","level":2,"name":"返回 json","children":[]}]},{"id":"475088765","level":1,"name":"flask","children":[{"id":"106136422","level":2,"name":"安装","children":[]},{"id":"3473022086","level":2,"name":"返回 json","children":[]},{"id":"4225763867","level":2,"name":"get post 请求","children":[]},{"id":"219518038","level":2,"name":"获取 post 请求参数","children":[]}]},{"id":"4286975580","level":1,"name":"git 操作","children":[]},{"id":"844833684","level":1,"name":"peewee数据库操作","children":[{"id":"2431741841","level":2,"name":"相关文档","children":[]},{"id":"2790882246","level":2,"name":"连接数据库、建表","children":[]}]},{"id":"1558416400","level":1,"name":"python学习","children":[{"id":"567872607","level":2,"name":"asyncio 定时器","children":[]},{"id":"1031077319","level":2,"name":"直接执行异步函数","children":[]},{"id":"326390468","level":2,"name":"path 路径","children":[]},{"id":"3432755798","level":2,"name":"字符串转换","children":[]},{"id":"1972909647","level":2,"name":"import 模板","children":[]},{"id":"2199186925","level":2,"name":"json 转换","children":[]},{"id":"3777866470","level":2,"name":"字符串拼接","children":[]},{"id":"797306554","level":2,"name":"for 循环","children":[]},{"id":"1141913493","level":2,"name":"数组","children":[]},{"id":"3103214599","level":2,"name":"命令行参数","children":[]},{"id":"2245121301","level":2,"name":"文件目录","children":[{"id":"2101533289","level":3,"name":"文件或目录是否存在","children":[]},{"id":"1287354342","level":3,"name":"文件读写","children":[]},{"id":"3393010697","level":3,"name":"目录操作","children":[]}]},{"id":"1765882974","level":2,"name":"字符串拆分成数组","children":[]},{"id":"416720611","level":2,"name":"正则表达式 替换","children":[]},{"id":"381180070","level":2,"name":"错误处理 try except else","children":[]},{"id":"1301757995","level":2,"name":"模块导入","children":[{"id":"3819966952","level":3,"name":"动态导入模块","children":[]},{"id":"3667267453","level":3,"name":"导入上一级模块","children":[]}]}]},{"id":"968920481","level":1,"name":"相关包","children":[{"id":"853637523","level":2,"name":"web 服务","children":[]},{"id":"2438580584","level":2,"name":"sqlite","children":[]},{"id":"3113532853","level":2,"name":"守护进程","children":[]},{"id":"971294674","level":2,"name":"sqllint 可视化","children":[]}]}],"content":"<section><h1 id=\"906736967\">flask copy</h1><section><h2 id=\"940257217\">安装</h2></section><section><h2 id=\"2742829989\">返回 json</h2><p>名称必须是字符串</p>\n<pre><code class=\"language-py\"><span class=\"hljs-meta\">@app</span>.route(<span class=\"hljs-string\">\"/test\"</span>)\ndef test():\n    <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-string\">'status'</span>: <span class=\"hljs-number\">1</span>\n    }</code></pre>\n</section></section><section><h1 id=\"475088765\">flask</h1><section><h2 id=\"106136422\">安装</h2><p>pip3 install flask</p>\n</section><section><h2 id=\"3473022086\">返回 json</h2><p>名称必须是字符串</p>\n<pre><code class=\"language-py\"><span class=\"hljs-meta\">@app</span>.route(<span class=\"hljs-string\">\"/test\"</span>)\ndef test():\n    <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-string\">'status'</span>: <span class=\"hljs-number\">1</span>\n    }</code></pre>\n</section><section><h2 id=\"4225763867\">get post 请求</h2><p>默认就是 get 请求</p>\n<pre><code class=\"language-py\"><span class=\"hljs-meta\">@app</span>.route(<span class=\"hljs-string\">\"/api/sendcode\"</span>, methods=[<span class=\"hljs-string\">\"POST\"</span>])\n<span class=\"hljs-keyword\">async</span> def sendCode():\n    <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-string\">'data'</span>: request.json[<span class=\"hljs-string\">'phoneNumber'</span>]\n        <span class=\"hljs-string\">'status'</span>: <span class=\"hljs-number\">1</span>\n    }</code></pre>\n</section><section><h2 id=\"219518038\">获取 post 请求参数</h2><pre><code class=\"language-py\"><span class=\"hljs-meta\">@app</span>.route(<span class=\"hljs-string\">\"/api/sendcode\"</span>, methods=[<span class=\"hljs-string\">\"POST\"</span>])\n<span class=\"hljs-keyword\">async</span> def sendCode():\n    <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-string\">'data'</span>: request.json[<span class=\"hljs-string\">'phoneNumber'</span>]\n        <span class=\"hljs-string\">'status'</span>: <span class=\"hljs-number\">1</span>\n    }</code></pre>\n</section></section><section><h1 id=\"4286975580\">git 操作</h1><p>使用 GitPython 库</p>\n<p>参考文档</p>\n<p><a href=\"https://gitpython.readthedocs.io/en/stable/tutorial.html\">https://gitpython.readthedocs.io/en/stable/tutorial.html</a></p>\n<p><a href=\"https://www.cnblogs.com/wanglan/p/10718876.html\">https://www.cnblogs.com/wanglan/p/10718876.html</a></p>\n<p><a href=\"https://www.jianshu.com/p/c1a7a32ae50b\">https://www.jianshu.com/p/c1a7a32ae50b</a></p>\n<pre><code class=\"language-py\">import git\n\n\ndef commit():\n    repo = git.Repo(<span class=\"hljs-string\">'./.git'</span>)\n\n    <span class=\"hljs-keyword\">if</span> repo.is_dirty():\n        repo.remote().fetch()\n        <span class=\"hljs-comment\"># try:</span>\n        <span class=\"hljs-comment\">#   repo.remote().pull()</span>\n        <span class=\"hljs-comment\"># except:</span>\n        <span class=\"hljs-comment\">#     print('pull错误')</span>\n\n        repo.git.add(<span class=\"hljs-string\">'-A'</span>)\n\n        <span class=\"hljs-comment\"># repo.index.add(['*'])</span>\n        <span class=\"hljs-comment\"># repo.index.remove(['*'])</span>\n\n        <span class=\"hljs-comment\"># repo.index.commit(f\"update {datetime.datetime.now()}\")</span>\n        repo.index.commit(<span class=\"hljs-string\">'.'</span>)\n\n        repo.remote().push()\n\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'push 完成'</span>)\n\n\ncommit()\n</code></pre>\n</section><section><h1 id=\"844833684\">peewee数据库操作</h1><section><h2 id=\"2431741841\">相关文档</h2><p><a href=\"https://blog.csdn.net/xhltk316/article/details/115967840\">https://blog.csdn.net/xhltk316/article/details/115967840</a></p>\n</section><section><h2 id=\"2790882246\">连接数据库、建表</h2><pre><code class=\"language-py\"><span class=\"hljs-keyword\">import</span> sys\n<span class=\"hljs-keyword\">from</span> pathlib <span class=\"hljs-keyword\">import</span> Path\n<span class=\"hljs-keyword\">from</span> peewee <span class=\"hljs-keyword\">import</span> *\n\ndb = SqliteDatabase(Path(sys.path[<span class=\"hljs-number\">0</span>], <span class=\"hljs-string\">'data/database.db'</span>))\n\n<span class=\"hljs-keyword\">class</span> BaseModel(Model):\n    <span class=\"hljs-keyword\">class</span> Meta:\n        database = db\n\n<span class=\"hljs-keyword\">class</span> User(BaseModel):\n    # unique 是否唯一\n    phoneNumber = CharField(unique=True)\n\ndb.connect()\ndb.create_tables([User])\n\n# User.create(name=<span class=\"hljs-string\">'张三'</span>, phoneNumber=<span class=\"hljs-string\">'+8613923401528'</span>)\n# User.create(name=<span class=\"hljs-string\">'李四'</span>, phoneNumber=<span class=\"hljs-string\">'+8618673696661'</span>)\n</code></pre>\n</section></section><section><h1 id=\"1558416400\">python学习</h1><section><h2 id=\"567872607\">asyncio 定时器</h2><pre><code class=\"language-py\"><span class=\"hljs-keyword\">async</span> def timeout_callback():\n    <span class=\"hljs-keyword\">await</span> asyncio.sleep(<span class=\"hljs-number\">1</span>) <span class=\"hljs-comment\">// 等待1s</span>\n    print(<span class=\"hljs-string\">'echo!'</span>)</code></pre>\n</section><section><h2 id=\"1031077319\">直接执行异步函数</h2><pre><code class=\"language-py\"><span class=\"hljs-keyword\">import</span> asyncio\n<span class=\"hljs-keyword\">import</span> TelethonPlus\n\n<span class=\"hljs-keyword\">async</span> def main():\n    print(<span class=\"hljs-string\">'xxx'</span>)\n    sent = <span class=\"hljs-keyword\">await</span> TelethonPlus.sendCode(<span class=\"hljs-string\">'+'</span>)\n    print(sent)\n\nloop = asyncio.get_event_loop()\nresult = loop.run_until_complete(main())\nloop.close()</code></pre>\n</section><section><h2 id=\"326390468\">path 路径</h2><p><a href=\"https://vimsky.com/examples/detail/python-method-pathlib.Path.resolve.html\">https://vimsky.com/examples/detail/python-method-pathlib.Path.resolve.html</a></p>\n<pre><code class=\"language-py\">from pathlib import <span class=\"hljs-built_in\">Path</span>\n\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">Path</span>.resolve(<span class=\"hljs-built_in\">Path</span>(''))) # 程序启动目录\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">Path</span>.absolute(<span class=\"hljs-built_in\">Path</span>('')))\n\n<span class=\"hljs-built_in\">print</span>(sys.<span class=\"hljs-built_in\">path</span>[<span class=\"hljs-number\">0</span>]) # 当前脚本绝对目录\n<span class=\"hljs-built_in\">print</span>(sys.argv[<span class=\"hljs-number\">0</span>]) # 路径，包括文件</code></pre>\n</section><section><h2 id=\"3432755798\">字符串转换</h2><pre><code class=\"language-py\">str(<span class=\"hljs-built_in\">Path</span>.absolute(<span class=\"hljs-built_in\">Path</span>('session/'+session_name)))</code></pre>\n</section><section><h2 id=\"1972909647\">import 模板</h2><p><a href=\"http://c.biancheng.net/view/2397.html\">http://c.biancheng.net/view/2397.html</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/75955445\">https://zhuanlan.zhihu.com/p/75955445</a></p>\n</section><section><h2 id=\"2199186925\">json 转换</h2><pre><code class=\"language-py\">data = [ { <span class=\"hljs-string\">'a'</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'b'</span> : <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'c'</span> : <span class=\"hljs-number\">3</span>, <span class=\"hljs-string\">'d'</span> : <span class=\"hljs-number\">4</span>, <span class=\"hljs-string\">'e'</span> : <span class=\"hljs-number\">5</span> } ]\n\ndata2 = json.dumps(data)\n\n# 将已编码的 <span class=\"hljs-built_in\">JSON</span> 字符串解码为 Python 对象\njson.loads(<span class=\"hljs-string\">'{}'</span>)</code></pre>\n</section><section><h2 id=\"3777866470\">字符串拼接</h2><p><a href=\"https://segmentfault.com/a/1190000015475309\">https://segmentfault.com/a/1190000015475309</a></p>\n<pre><code class=\"language-py\"><span class=\"hljs-built_in\">print</span>(f'{i} - {chat.id} - {chat.<span class=\"hljs-built_in\">title</span>}')</code></pre>\n</section><section><h2 id=\"797306554\">for 循环</h2><pre><code class=\"language-py\"><span class=\"hljs-keyword\">for</span> member <span class=\"hljs-keyword\">in</span> all_participants:\n    <span class=\"hljs-built_in\">print</span>(member.id)\n\n<span class=\"hljs-comment\"># key</span>\n<span class=\"hljs-keyword\">for</span> key, value <span class=\"hljs-keyword\">in</span> all_participants.item():\n    <span class=\"hljs-built_in\">print</span>(key, value)</code></pre>\n</section><section><h2 id=\"1141913493\">数组</h2><pre><code class=\"language-py\"><span class=\"hljs-comment\"># 带索引循环</span>\n<span class=\"hljs-keyword\">for</span> i, name <span class=\"hljs-keyword\">in</span> enumerate(list_dir):\n    <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">'{i} - {name}'</span>)</code></pre>\n</section><section><h2 id=\"3103214599\">命令行参数</h2><p><a href=\"https://docs.python.org/zh-tw/3/library/argparse.html\">https://docs.python.org/zh-tw/3/library/argparse.html</a></p>\n<pre><code class=\"language-py\">\nimport argparse\n\ndef main():\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'main'</span>)\n\nparser = argparse.ArgumentParser(description=<span class=\"hljs-string\">'telegram api'</span>)\nparser.add_argument(<span class=\"hljs-string\">'phoneNumbers'</span>, metavar=<span class=\"hljs-string\">'phoneNumbers'</span>, <span class=\"hljs-built_in\">type</span>=str, nargs=<span class=\"hljs-string\">'+'</span>,\n                    <span class=\"hljs-built_in\">help</span>=<span class=\"hljs-string\">'多个手机号'</span>)\nparser.add_argument(<span class=\"hljs-string\">'-p'</span>, dest=<span class=\"hljs-string\">'run'</span>, action=<span class=\"hljs-string\">'store_const'</span>,\n                    const=main, default=max,\n                    <span class=\"hljs-built_in\">help</span>=<span class=\"hljs-string\">'手机号，可多个'</span>)\n\nargs = parser.parse_args()\n<span class=\"hljs-built_in\">print</span>(args)\n<span class=\"hljs-built_in\">print</span>(args.phoneNumbers)\nargs.run()\n</code></pre>\n</section><section><h2 id=\"2245121301\">文件目录</h2><section><h3 id=\"2101533289\">文件或目录是否存在</h3><pre><code class=\"language-py\"><span class=\"hljs-built_in\">print</span>(os.<span class=\"hljs-built_in\">path</span>.exists(<span class=\"hljs-built_in\">Path</span>.resolve(<span class=\"hljs-built_in\">Path</span>('proxy.py'))))</code></pre>\n</section><section><h3 id=\"1287354342\">文件读写</h3><pre><code class=\"language-py\"><span class=\"hljs-attribute\">file</span> = open(filePath, <span class=\"hljs-string\">\"w+\"</span>)\nfile = open(filePath, <span class=\"hljs-string\">\"w\"</span>)\ndataFile.write(<span class=\"hljs-string\">'hello'</span>)\n\nfile = open(filePath, <span class=\"hljs-string\">\"r\"</span>)\ndataFile.read()\n\nfile.close()</code></pre>\n</section><section><h3 id=\"3393010697\">目录操作</h3><pre><code class=\"language-py\">from pathlib import <span class=\"hljs-built_in\">Path</span>\nimport os\n\nsessionsDir = <span class=\"hljs-built_in\">Path</span>.absolute(<span class=\"hljs-built_in\">Path</span>('sessions')) # 当前项目绝对路径再拼接sessions\n<span class=\"hljs-built_in\">print</span>(sessionsDir)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">Path</span>.joinpath(sessionsDir, '<span class=\"hljs-number\">123</span>')) # 拼接路径\n<span class=\"hljs-keyword\">if</span> (os.<span class=\"hljs-built_in\">path</span>.exists(sessionsDir) == False): # 不存在则创建\n    os.<span class=\"hljs-built_in\">mkdir</span>(sessionsDir)</code></pre>\n</section></section><section><h2 id=\"1765882974\">字符串拆分成数组</h2><pre><code class=\"language-py\"><span class=\"hljs-attribute\">content</span> = <span class=\"hljs-string\">'1,2,3'</span>\ncontent = content.split(<span class=\"hljs-string\">','</span>)</code></pre>\n</section><section><h2 id=\"416720611\">正则表达式 替换</h2><pre><code class=\"language-py\"><span class=\"hljs-attribute\">name</span> = <span class=\"hljs-string\">'111111.session'</span>\nname = re.sub(r<span class=\"hljs-string\">'\\.session$'</span>, <span class=\"hljs-string\">''</span>, name)</code></pre>\n</section><section><h2 id=\"381180070\">错误处理 try except else</h2><pre><code class=\"language-py\">try:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'可能会出错'</span>)\nexcept:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'错误'</span>)\n<span class=\"hljs-keyword\">else</span>:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">'成功'</span>)\n\n<span class=\"hljs-comment\"># 输出异常消息</span>\ntry:\n    <span class=\"hljs-built_in\">print</span>(1/0)            <span class=\"hljs-comment\"># 触发异常</span>\nexcept Exception as err:\n    <span class=\"hljs-built_in\">print</span>(1, err)\n<span class=\"hljs-keyword\">else</span>:\n    <span class=\"hljs-built_in\">print</span>(2)</code></pre>\n</section><section><h2 id=\"1301757995\">模块导入</h2><section><h3 id=\"3819966952\">动态导入模块</h3><pre><code class=\"language-py\"><span class=\"hljs-keyword\">if</span> False\n    lib = __import__(<span class=\"hljs-string\">'lib.aa'</span>)</code></pre>\n</section><section><h3 id=\"3667267453\">导入上一级模块</h3><p><a href=\"https://docs.python.org/zh-cn/3/reference/import.html#package-relative-imports\">https://docs.python.org/zh-cn/3/reference/import.html#package-relative-imports</a></p>\n<p><a href=\"https://blog.csdn.net/m0_47670683/article/details/108989698\">https://blog.csdn.net/m0_47670683/article/details/108989698</a></p>\n<p>待验证</p>\n<pre><code class=\"language-py\"></code></pre>\n</section></section></section><section><h1 id=\"968920481\">相关包</h1><section><h2 id=\"853637523\">web 服务</h2><p><a href=\"https://github.com/pallets/flask\">https://github.com/pallets/flask</a></p>\n</section><section><h2 id=\"2438580584\">sqlite</h2><p><a href=\"https://github.com/coleifer/peewee\">https://github.com/coleifer/peewee</a></p>\n</section><section><h2 id=\"3113532853\">守护进程</h2><p><a href=\"https://github.com/Supervisor/supervisor\">https://github.com/Supervisor/supervisor</a>\n<a href=\"https://www.shuzhiduo.com/A/B0zqaDy3zv/\">https://www.shuzhiduo.com/A/B0zqaDy3zv/</a>\n<a href=\"https://blog.csdn.net/sinat_38682860/article/details/89459230\">https://blog.csdn.net/sinat_38682860/article/details/89459230</a></p>\n</section><section><h2 id=\"971294674\">sqllint 可视化</h2><p><a href=\"https://github.com/coleifer/sqlite-web\">https://github.com/coleifer/sqlite-web</a></p>\n<pre><code class=\"language-sh\"><span class=\"hljs-attribute\">pip3</span> install sqlite-web\nsqlite_web /path/to/database.db</code></pre>\n"})