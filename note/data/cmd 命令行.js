window['cb_cmd 命令行']({"outline":{"children":[{"level":1,"name":"打开浏览器 并指定网址","children":[]},{"level":1,"name":"代理","children":[]},{"level":1,"name":"通过 cmd 调用 PowerShell 并执行命令","children":[]},{"level":1,"name":"定时器","children":[]},{"level":1,"name":"同时运行多个cmd，并执行命令运行","children":[]}],"name":"cmd 命令行"},"content":"<section><h1 id='[\"打开浏览器 并指定网址\"]' data-index=0>打开浏览器 并指定网址</h1><p>explorer <a href=http://google.com>http://google.com</a></p></section><section><h1 id='[\"代理\"]' data-index=1>代理</h1><p>这只是临时设置，关闭cmd窗口则失效</p><p>一般只需：</p><pre><code><span class=hljs-attribute>set</span> http_proxy=<span class=hljs-number>127.0.0.1:10086</span></code></pre><p>带用户名密码的：</p><pre><code><span class=hljs-keyword>set</span> http_proxy=http:<span class=hljs-comment>//proxy.com:port/</span>\n<span class=hljs-keyword>set</span> http_proxy_user=username\n<span class=hljs-keyword>set</span> http_proxy_pass=password</code></pre></section><section><h1 id='[\"通过 cmd 调用 PowerShell 并执行命令\"]' data-index=2>通过 cmd 调用 PowerShell 并执行命令</h1><p>start powershell &quot;Start-Process node &quot;bin/www&quot; -Verb runas;explorer <a href=http://localhost:3003&quot;>http://localhost:3003&quot;</a></p></section><section><h1 id='[\"定时器\"]' data-index=3>定时器</h1><p>cmd 并没有提供定时器方法，但还是有办法实现</p><p>使用 ping：用一个没法ping通的ip，并设置最大等待时间</p><pre><code class=language-cmd><span class=hljs-selector-tag>echo</span> 60秒后执行\n<span class=hljs-selector-tag>ping</span> 1<span class=hljs-selector-class>.1</span><span class=hljs-selector-class>.1</span><span class=hljs-selector-class>.1</span> <span class=hljs-selector-tag>-n</span> 1 <span class=hljs-selector-tag>-w</span> 60000 &gt; <span class=hljs-selector-tag>nul</span></code></pre><p>1.1.1.1 绝大多数情况是ping不同的，但也有例外。一些比较严谨的情况谨慎使用</p></section><section><h1 id='[\"同时运行多个cmd，并执行命令运行\"]' data-index=4>同时运行多个cmd，并执行命令运行</h1><p>关于双引号可有可没有，但意义不一样：</p><ul><li>双引号可让命令完全为新弹出的命令</li><li>不用双引号，&amp;后面的命令为当前窗口，非新弹出的窗口</li></ul><p>其中 /k 表示运行结束不关闭，可改成 /c 运行结束关闭<br>如果不加start 将只能执行第一个</p><pre><code><span class=hljs-built_in>start</span> <span class=hljs-built_in>cmd</span> /k \"<span class=hljs-built_in>cd</span>/d d:\\&amp;<span class=hljs-built_in>echo</span> xx&amp;&amp;<span class=hljs-built_in>pause</span>&amp;&amp;<span class=hljs-built_in>ping</span> <span class=hljs-number>172</span>.<span class=hljs-number>30</span>.<span class=hljs-number>218</span>.<span class=hljs-number>1</span>&amp;&amp;<span class=hljs-built_in>ping</span> <span class=hljs-number>172</span>.<span class=hljs-number>30</span>.<span class=hljs-number>218</span>.<span class=hljs-number>111</span>\"\n<span class=hljs-built_in>start</span> <span class=hljs-built_in>cmd</span> /k \"<span class=hljs-built_in>cd</span>/d d:\\&amp;<span class=hljs-built_in>echo</span> xxx&amp;&amp;<span class=hljs-built_in>pause</span>&amp;&amp;<span class=hljs-built_in>ping</span> <span class=hljs-number>192</span>.<span class=hljs-number>168</span>.<span class=hljs-number>91</span>.<span class=hljs-number>1</span>\"</code></pre><p>pageage.json 应用</p><pre><code>{\n  <span class=hljs-string>\"name\"</span>: <span class=hljs-string>\"project\"</span>,\n  <span class=hljs-string>\"version\"</span>: <span class=hljs-string>\"0.0.1\"</span>,\n  <span class=hljs-string>\"private\"</span>: <span class=hljs-literal>true</span>,\n  <span class=hljs-string>\"scripts\"</span>: {\n    <span class=hljs-string>\"build\"</span>: <span class=hljs-string>\"start cmd /k \\\"npm run build.ios\\\"&amp;&amp;npm run build.android\"</span>,\n    <span class=hljs-string>\"build.dev\"</span>: <span class=hljs-string>\"start cmd /k \\\"npm run build.dev.ios\\\"&amp;&amp;npm run build.dev.android\"</span>,\n  }\n}\n</code></pre></section>"})